// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Runtime.InteropServices;
using System.Runtime.CompilerServices;

namespace Vortice.Vulkan;

unsafe partial class Vulkan
{
	// Global functions (no <see cref="VkInstance"/> required)
	public static PFN_vkVoidFunction vkCreateInstance_ptr;
	public static PFN_vkVoidFunction vkEnumerateInstanceExtensionProperties_ptr;
	public static PFN_vkVoidFunction vkEnumerateInstanceLayerProperties_ptr;
	public static PFN_vkVoidFunction vkEnumerateInstanceVersion_ptr;

	public static VkResult vkCreateInstance(VkInstanceCreateInfo* createInfo, VkInstance* instance)
	{
		return ((delegate* unmanaged<VkInstanceCreateInfo*, VkAllocationCallbacks*, VkInstance*, VkResult>)vkCreateInstance_ptr.Value)(createInfo, default, instance);
	}

	public static VkResult vkCreateInstance(VkInstanceCreateInfo* createInfo, VkAllocationCallbacks* allocator, VkInstance* instance)
	{
		return ((delegate* unmanaged<VkInstanceCreateInfo*, VkAllocationCallbacks*, VkInstance*, VkResult>)vkCreateInstance_ptr.Value)(createInfo, allocator, instance);
	}

	public static VkResult vkCreateInstance(in VkInstanceCreateInfo createInfo, VkInstance* instance)
	{
		fixed (VkInstanceCreateInfo* createInfoPtr = &createInfo)
		{
			return ((delegate* unmanaged<VkInstanceCreateInfo*, VkAllocationCallbacks*, VkInstance*, VkResult>)vkCreateInstance_ptr.Value)(createInfoPtr, default, instance);
		}
	}

	public static VkResult vkCreateInstance(in VkInstanceCreateInfo createInfo, VkAllocationCallbacks* allocator, VkInstance* instance)
	{
		fixed (VkInstanceCreateInfo* createInfoPtr = &createInfo)
		{
			return ((delegate* unmanaged<VkInstanceCreateInfo*, VkAllocationCallbacks*, VkInstance*, VkResult>)vkCreateInstance_ptr.Value)(createInfoPtr, allocator, instance);
		}
	}

	public static VkResult vkCreateInstance(VkInstanceCreateInfo* createInfo, out VkInstance instance)
	{
		Unsafe.SkipInit(out instance);

		fixed (VkInstance* instancePtr = &instance)
		{
			return ((delegate* unmanaged<VkInstanceCreateInfo*, VkAllocationCallbacks*, VkInstance*, VkResult>)vkCreateInstance_ptr.Value)(createInfo, default, instancePtr);
		}
	}

	public static VkResult vkCreateInstance(VkInstanceCreateInfo* createInfo, VkAllocationCallbacks* allocator, out VkInstance instance)
	{
		Unsafe.SkipInit(out instance);

		fixed (VkInstance* instancePtr = &instance)
		{
			return ((delegate* unmanaged<VkInstanceCreateInfo*, VkAllocationCallbacks*, VkInstance*, VkResult>)vkCreateInstance_ptr.Value)(createInfo, allocator, instancePtr);
		}
	}

	public static VkResult vkCreateInstance(in VkInstanceCreateInfo createInfo, out VkInstance instance)
	{
		fixed (VkInstanceCreateInfo* createInfoPtr = &createInfo)
		{
			Unsafe.SkipInit(out instance);

			fixed (VkInstance* instancePtr = &instance)
			{
				return ((delegate* unmanaged<VkInstanceCreateInfo*, VkAllocationCallbacks*, VkInstance*, VkResult>)vkCreateInstance_ptr.Value)(createInfoPtr, default, instancePtr);
			}
		}
	}

	public static VkResult vkCreateInstance(in VkInstanceCreateInfo createInfo, VkAllocationCallbacks* allocator, out VkInstance instance)
	{
		fixed (VkInstanceCreateInfo* createInfoPtr = &createInfo)
		{
			Unsafe.SkipInit(out instance);

			fixed (VkInstance* instancePtr = &instance)
			{
				return ((delegate* unmanaged<VkInstanceCreateInfo*, VkAllocationCallbacks*, VkInstance*, VkResult>)vkCreateInstance_ptr.Value)(createInfoPtr, allocator, instancePtr);
			}
		}
	}

	public static VkResult vkEnumerateInstanceExtensionProperties(byte* layerName, uint* propertyCount, VkExtensionProperties* properties)
	{
		return ((delegate* unmanaged<byte*, uint*, VkExtensionProperties*, VkResult>)vkEnumerateInstanceExtensionProperties_ptr.Value)(layerName, propertyCount, properties);
	}

	public static VkResult vkEnumerateInstanceLayerProperties(uint* propertyCount, VkLayerProperties* properties)
	{
		return ((delegate* unmanaged<uint*, VkLayerProperties*, VkResult>)vkEnumerateInstanceLayerProperties_ptr.Value)(propertyCount, properties);
	}

	public static VkResult vkEnumerateInstanceVersion(uint* apiVersion)
	{
		return ((delegate* unmanaged<uint*, VkResult>)vkEnumerateInstanceVersion_ptr.Value)(apiVersion);
	}

}
