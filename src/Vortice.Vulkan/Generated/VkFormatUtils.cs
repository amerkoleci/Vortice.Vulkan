// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

namespace Vortice.Vulkan;

unsafe partial class Vulkan
{
	public static (int X, int Y, int Z) BlockExtent(this VkFormat format)
	{
		switch(format)
		{
			case VkFormat.Bc1RgbUnormBlock: return (4, 4, 1);
			case VkFormat.Bc1RgbSrgbBlock: return (4, 4, 1);
			case VkFormat.Bc1RgbaUnormBlock: return (4, 4, 1);
			case VkFormat.Bc1RgbaSrgbBlock: return (4, 4, 1);
			case VkFormat.Bc2UnormBlock: return (4, 4, 1);
			case VkFormat.Bc2SrgbBlock: return (4, 4, 1);
			case VkFormat.Bc3UnormBlock: return (4, 4, 1);
			case VkFormat.Bc3SrgbBlock: return (4, 4, 1);
			case VkFormat.Bc4UnormBlock: return (4, 4, 1);
			case VkFormat.Bc4SnormBlock: return (4, 4, 1);
			case VkFormat.Bc5UnormBlock: return (4, 4, 1);
			case VkFormat.Bc5SnormBlock: return (4, 4, 1);
			case VkFormat.Bc6hUfloatBlock: return (4, 4, 1);
			case VkFormat.Bc6hSfloatBlock: return (4, 4, 1);
			case VkFormat.Bc7UnormBlock: return (4, 4, 1);
			case VkFormat.Bc7SrgbBlock: return (4, 4, 1);
			case VkFormat.Etc2R8G8B8UnormBlock: return (4, 4, 1);
			case VkFormat.Etc2R8G8B8SrgbBlock: return (4, 4, 1);
			case VkFormat.Etc2R8G8B8A1UnormBlock: return (4, 4, 1);
			case VkFormat.Etc2R8G8B8A1SrgbBlock: return (4, 4, 1);
			case VkFormat.Etc2R8G8B8A8UnormBlock: return (4, 4, 1);
			case VkFormat.Etc2R8G8B8A8SrgbBlock: return (4, 4, 1);
			case VkFormat.EacR11UnormBlock: return (4, 4, 1);
			case VkFormat.EacR11SnormBlock: return (4, 4, 1);
			case VkFormat.EacR11G11UnormBlock: return (4, 4, 1);
			case VkFormat.EacR11G11SnormBlock: return (4, 4, 1);
			case VkFormat.Astc4x4UnormBlock: return (4, 4, 1);
			case VkFormat.Astc4x4SrgbBlock: return (4, 4, 1);
			case VkFormat.Astc5x4UnormBlock: return (5, 4, 1);
			case VkFormat.Astc5x4SrgbBlock: return (5, 4, 1);
			case VkFormat.Astc5x5UnormBlock: return (5, 5, 1);
			case VkFormat.Astc5x5SrgbBlock: return (5, 5, 1);
			case VkFormat.Astc6x5UnormBlock: return (6, 5, 1);
			case VkFormat.Astc6x5SrgbBlock: return (6, 5, 1);
			case VkFormat.Astc6x6UnormBlock: return (6, 6, 1);
			case VkFormat.Astc6x6SrgbBlock: return (6, 6, 1);
			case VkFormat.Astc8x5UnormBlock: return (8, 5, 1);
			case VkFormat.Astc8x5SrgbBlock: return (8, 5, 1);
			case VkFormat.Astc8x6UnormBlock: return (8, 6, 1);
			case VkFormat.Astc8x6SrgbBlock: return (8, 6, 1);
			case VkFormat.Astc8x8UnormBlock: return (8, 8, 1);
			case VkFormat.Astc8x8SrgbBlock: return (8, 8, 1);
			case VkFormat.Astc10x5UnormBlock: return (10, 5, 1);
			case VkFormat.Astc10x5SrgbBlock: return (10, 5, 1);
			case VkFormat.Astc10x6UnormBlock: return (10, 6, 1);
			case VkFormat.Astc10x6SrgbBlock: return (10, 6, 1);
			case VkFormat.Astc10x8UnormBlock: return (10, 8, 1);
			case VkFormat.Astc10x8SrgbBlock: return (10, 8, 1);
			case VkFormat.Astc10x10UnormBlock: return (10, 10, 1);
			case VkFormat.Astc10x10SrgbBlock: return (10, 10, 1);
			case VkFormat.Astc12x10UnormBlock: return (12, 10, 1);
			case VkFormat.Astc12x10SrgbBlock: return (12, 10, 1);
			case VkFormat.Astc12x12UnormBlock: return (12, 12, 1);
			case VkFormat.Astc12x12SrgbBlock: return (12, 12, 1);
			case VkFormat.G8B8G8R8422Unorm: return (2, 1, 1);
			case VkFormat.B8G8R8G8422Unorm: return (2, 1, 1);
			case VkFormat.G10X6B10X6G10X6R10X6422Unorm4Pack16: return (2, 1, 1);
			case VkFormat.B10X6G10X6R10X6G10X6422Unorm4Pack16: return (2, 1, 1);
			case VkFormat.G12X4B12X4G12X4R12X4422Unorm4Pack16: return (2, 1, 1);
			case VkFormat.B12X4G12X4R12X4G12X4422Unorm4Pack16: return (2, 1, 1);
			case VkFormat.G16B16G16R16422Unorm: return (2, 1, 1);
			case VkFormat.B16G16R16G16422Unorm: return (2, 1, 1);
			case VkFormat.PVRTC12BPPUnormBlockImg: return (8, 4, 1);
			case VkFormat.PVRTC14BPPUnormBlockImg: return (4, 4, 1);
			case VkFormat.PVRTC22BPPUnormBlockImg: return (8, 4, 1);
			case VkFormat.PVRTC24BPPUnormBlockImg: return (4, 4, 1);
			case VkFormat.PVRTC12BPPSrgbBlockImg: return (8, 4, 1);
			case VkFormat.PVRTC14BPPSrgbBlockImg: return (4, 4, 1);
			case VkFormat.PVRTC22BPPSrgbBlockImg: return (8, 4, 1);
			case VkFormat.PVRTC24BPPSrgbBlockImg: return (4, 4, 1);
			case VkFormat.Astc4x4SfloatBlock: return (4, 4, 1);
			case VkFormat.Astc5x4SfloatBlock: return (5, 4, 1);
			case VkFormat.Astc5x5SfloatBlock: return (5, 5, 1);
			case VkFormat.Astc6x5SfloatBlock: return (6, 5, 1);
			case VkFormat.Astc6x6SfloatBlock: return (6, 6, 1);
			case VkFormat.Astc8x5SfloatBlock: return (8, 5, 1);
			case VkFormat.Astc8x6SfloatBlock: return (8, 6, 1);
			case VkFormat.Astc8x8SfloatBlock: return (8, 8, 1);
			case VkFormat.Astc10x5SfloatBlock: return (10, 5, 1);
			case VkFormat.Astc10x6SfloatBlock: return (10, 6, 1);
			case VkFormat.Astc10x8SfloatBlock: return (10, 8, 1);
			case VkFormat.Astc10x10SfloatBlock: return (10, 10, 1);
			case VkFormat.Astc12x10SfloatBlock: return (12, 10, 1);
			case VkFormat.Astc12x12SfloatBlock: return (12, 12, 1);

			default: return (1, 1, 1);
		}
	}
	public static int BlockSize(this VkFormat format)
	{
		switch(format)
		{
			case VkFormat.R4G4UnormPack8: return 1;
			case VkFormat.R4G4B4A4UnormPack16: return 2;
			case VkFormat.B4G4R4A4UnormPack16: return 2;
			case VkFormat.R5G6B5UnormPack16: return 2;
			case VkFormat.B5G6R5UnormPack16: return 2;
			case VkFormat.R5G5B5A1UnormPack16: return 2;
			case VkFormat.B5G5R5A1UnormPack16: return 2;
			case VkFormat.A1R5G5B5UnormPack16: return 2;
			case VkFormat.R8Unorm: return 1;
			case VkFormat.R8Snorm: return 1;
			case VkFormat.R8Uscaled: return 1;
			case VkFormat.R8Sscaled: return 1;
			case VkFormat.R8Uint: return 1;
			case VkFormat.R8Sint: return 1;
			case VkFormat.R8Srgb: return 1;
			case VkFormat.R8G8Unorm: return 2;
			case VkFormat.R8G8Snorm: return 2;
			case VkFormat.R8G8Uscaled: return 2;
			case VkFormat.R8G8Sscaled: return 2;
			case VkFormat.R8G8Uint: return 2;
			case VkFormat.R8G8Sint: return 2;
			case VkFormat.R8G8Srgb: return 2;
			case VkFormat.R8G8B8Unorm: return 3;
			case VkFormat.R8G8B8Snorm: return 3;
			case VkFormat.R8G8B8Uscaled: return 3;
			case VkFormat.R8G8B8Sscaled: return 3;
			case VkFormat.R8G8B8Uint: return 3;
			case VkFormat.R8G8B8Sint: return 3;
			case VkFormat.R8G8B8Srgb: return 3;
			case VkFormat.B8G8R8Unorm: return 3;
			case VkFormat.B8G8R8Snorm: return 3;
			case VkFormat.B8G8R8Uscaled: return 3;
			case VkFormat.B8G8R8Sscaled: return 3;
			case VkFormat.B8G8R8Uint: return 3;
			case VkFormat.B8G8R8Sint: return 3;
			case VkFormat.B8G8R8Srgb: return 3;
			case VkFormat.R8G8B8A8Unorm: return 4;
			case VkFormat.R8G8B8A8Snorm: return 4;
			case VkFormat.R8G8B8A8Uscaled: return 4;
			case VkFormat.R8G8B8A8Sscaled: return 4;
			case VkFormat.R8G8B8A8Uint: return 4;
			case VkFormat.R8G8B8A8Sint: return 4;
			case VkFormat.R8G8B8A8Srgb: return 4;
			case VkFormat.B8G8R8A8Unorm: return 4;
			case VkFormat.B8G8R8A8Snorm: return 4;
			case VkFormat.B8G8R8A8Uscaled: return 4;
			case VkFormat.B8G8R8A8Sscaled: return 4;
			case VkFormat.B8G8R8A8Uint: return 4;
			case VkFormat.B8G8R8A8Sint: return 4;
			case VkFormat.B8G8R8A8Srgb: return 4;
			case VkFormat.A8B8G8R8UnormPack32: return 4;
			case VkFormat.A8B8G8R8SnormPack32: return 4;
			case VkFormat.A8B8G8R8UscaledPack32: return 4;
			case VkFormat.A8B8G8R8SscaledPack32: return 4;
			case VkFormat.A8B8G8R8UintPack32: return 4;
			case VkFormat.A8B8G8R8SintPack32: return 4;
			case VkFormat.A8B8G8R8SrgbPack32: return 4;
			case VkFormat.A2R10G10B10UnormPack32: return 4;
			case VkFormat.A2R10G10B10SnormPack32: return 4;
			case VkFormat.A2R10G10B10UscaledPack32: return 4;
			case VkFormat.A2R10G10B10SscaledPack32: return 4;
			case VkFormat.A2R10G10B10UintPack32: return 4;
			case VkFormat.A2R10G10B10SintPack32: return 4;
			case VkFormat.A2B10G10R10UnormPack32: return 4;
			case VkFormat.A2B10G10R10SnormPack32: return 4;
			case VkFormat.A2B10G10R10UscaledPack32: return 4;
			case VkFormat.A2B10G10R10SscaledPack32: return 4;
			case VkFormat.A2B10G10R10UintPack32: return 4;
			case VkFormat.A2B10G10R10SintPack32: return 4;
			case VkFormat.R16Unorm: return 2;
			case VkFormat.R16Snorm: return 2;
			case VkFormat.R16Uscaled: return 2;
			case VkFormat.R16Sscaled: return 2;
			case VkFormat.R16Uint: return 2;
			case VkFormat.R16Sint: return 2;
			case VkFormat.R16Sfloat: return 2;
			case VkFormat.R16G16Unorm: return 4;
			case VkFormat.R16G16Snorm: return 4;
			case VkFormat.R16G16Uscaled: return 4;
			case VkFormat.R16G16Sscaled: return 4;
			case VkFormat.R16G16Uint: return 4;
			case VkFormat.R16G16Sint: return 4;
			case VkFormat.R16G16Sfloat: return 4;
			case VkFormat.R16G16B16Unorm: return 6;
			case VkFormat.R16G16B16Snorm: return 6;
			case VkFormat.R16G16B16Uscaled: return 6;
			case VkFormat.R16G16B16Sscaled: return 6;
			case VkFormat.R16G16B16Uint: return 6;
			case VkFormat.R16G16B16Sint: return 6;
			case VkFormat.R16G16B16Sfloat: return 6;
			case VkFormat.R16G16B16A16Unorm: return 8;
			case VkFormat.R16G16B16A16Snorm: return 8;
			case VkFormat.R16G16B16A16Uscaled: return 8;
			case VkFormat.R16G16B16A16Sscaled: return 8;
			case VkFormat.R16G16B16A16Uint: return 8;
			case VkFormat.R16G16B16A16Sint: return 8;
			case VkFormat.R16G16B16A16Sfloat: return 8;
			case VkFormat.R32Uint: return 4;
			case VkFormat.R32Sint: return 4;
			case VkFormat.R32Sfloat: return 4;
			case VkFormat.R32G32Uint: return 8;
			case VkFormat.R32G32Sint: return 8;
			case VkFormat.R32G32Sfloat: return 8;
			case VkFormat.R32G32B32Uint: return 12;
			case VkFormat.R32G32B32Sint: return 12;
			case VkFormat.R32G32B32Sfloat: return 12;
			case VkFormat.R32G32B32A32Uint: return 16;
			case VkFormat.R32G32B32A32Sint: return 16;
			case VkFormat.R32G32B32A32Sfloat: return 16;
			case VkFormat.R64Uint: return 8;
			case VkFormat.R64Sint: return 8;
			case VkFormat.R64Sfloat: return 8;
			case VkFormat.R64G64Uint: return 16;
			case VkFormat.R64G64Sint: return 16;
			case VkFormat.R64G64Sfloat: return 16;
			case VkFormat.R64G64B64Uint: return 24;
			case VkFormat.R64G64B64Sint: return 24;
			case VkFormat.R64G64B64Sfloat: return 24;
			case VkFormat.R64G64B64A64Uint: return 32;
			case VkFormat.R64G64B64A64Sint: return 32;
			case VkFormat.R64G64B64A64Sfloat: return 32;
			case VkFormat.B10G11R11UfloatPack32: return 4;
			case VkFormat.E5B9G9R9UfloatPack32: return 4;
			case VkFormat.D16Unorm: return 2;
			case VkFormat.X8D24UnormPack32: return 4;
			case VkFormat.D32Sfloat: return 4;
			case VkFormat.S8Uint: return 1;
			case VkFormat.D16UnormS8Uint: return 3;
			case VkFormat.D24UnormS8Uint: return 4;
			case VkFormat.D32SfloatS8Uint: return 5;
			case VkFormat.Bc1RgbUnormBlock: return 8;
			case VkFormat.Bc1RgbSrgbBlock: return 8;
			case VkFormat.Bc1RgbaUnormBlock: return 8;
			case VkFormat.Bc1RgbaSrgbBlock: return 8;
			case VkFormat.Bc2UnormBlock: return 16;
			case VkFormat.Bc2SrgbBlock: return 16;
			case VkFormat.Bc3UnormBlock: return 16;
			case VkFormat.Bc3SrgbBlock: return 16;
			case VkFormat.Bc4UnormBlock: return 8;
			case VkFormat.Bc4SnormBlock: return 8;
			case VkFormat.Bc5UnormBlock: return 16;
			case VkFormat.Bc5SnormBlock: return 16;
			case VkFormat.Bc6hUfloatBlock: return 16;
			case VkFormat.Bc6hSfloatBlock: return 16;
			case VkFormat.Bc7UnormBlock: return 16;
			case VkFormat.Bc7SrgbBlock: return 16;
			case VkFormat.Etc2R8G8B8UnormBlock: return 8;
			case VkFormat.Etc2R8G8B8SrgbBlock: return 8;
			case VkFormat.Etc2R8G8B8A1UnormBlock: return 8;
			case VkFormat.Etc2R8G8B8A1SrgbBlock: return 8;
			case VkFormat.Etc2R8G8B8A8UnormBlock: return 16;
			case VkFormat.Etc2R8G8B8A8SrgbBlock: return 16;
			case VkFormat.EacR11UnormBlock: return 8;
			case VkFormat.EacR11SnormBlock: return 8;
			case VkFormat.EacR11G11UnormBlock: return 16;
			case VkFormat.EacR11G11SnormBlock: return 16;
			case VkFormat.Astc4x4UnormBlock: return 16;
			case VkFormat.Astc4x4SrgbBlock: return 16;
			case VkFormat.Astc5x4UnormBlock: return 16;
			case VkFormat.Astc5x4SrgbBlock: return 16;
			case VkFormat.Astc5x5UnormBlock: return 16;
			case VkFormat.Astc5x5SrgbBlock: return 16;
			case VkFormat.Astc6x5UnormBlock: return 16;
			case VkFormat.Astc6x5SrgbBlock: return 16;
			case VkFormat.Astc6x6UnormBlock: return 16;
			case VkFormat.Astc6x6SrgbBlock: return 16;
			case VkFormat.Astc8x5UnormBlock: return 16;
			case VkFormat.Astc8x5SrgbBlock: return 16;
			case VkFormat.Astc8x6UnormBlock: return 16;
			case VkFormat.Astc8x6SrgbBlock: return 16;
			case VkFormat.Astc8x8UnormBlock: return 16;
			case VkFormat.Astc8x8SrgbBlock: return 16;
			case VkFormat.Astc10x5UnormBlock: return 16;
			case VkFormat.Astc10x5SrgbBlock: return 16;
			case VkFormat.Astc10x6UnormBlock: return 16;
			case VkFormat.Astc10x6SrgbBlock: return 16;
			case VkFormat.Astc10x8UnormBlock: return 16;
			case VkFormat.Astc10x8SrgbBlock: return 16;
			case VkFormat.Astc10x10UnormBlock: return 16;
			case VkFormat.Astc10x10SrgbBlock: return 16;
			case VkFormat.Astc12x10UnormBlock: return 16;
			case VkFormat.Astc12x10SrgbBlock: return 16;
			case VkFormat.Astc12x12UnormBlock: return 16;
			case VkFormat.Astc12x12SrgbBlock: return 16;
			case VkFormat.G8B8G8R8422Unorm: return 4;
			case VkFormat.B8G8R8G8422Unorm: return 4;
			case VkFormat.G8B8R83Plane420Unorm: return 3;
			case VkFormat.G8B8R82Plane420Unorm: return 3;
			case VkFormat.G8B8R83Plane422Unorm: return 3;
			case VkFormat.G8B8R82Plane422Unorm: return 3;
			case VkFormat.G8B8R83Plane444Unorm: return 3;
			case VkFormat.R10X6UnormPack16: return 2;
			case VkFormat.R10X6G10X6Unorm2Pack16: return 4;
			case VkFormat.R10X6G10X6B10X6A10X6Unorm4Pack16: return 8;
			case VkFormat.G10X6B10X6G10X6R10X6422Unorm4Pack16: return 8;
			case VkFormat.B10X6G10X6R10X6G10X6422Unorm4Pack16: return 8;
			case VkFormat.G10X6B10X6R10X63Plane420Unorm3Pack16: return 6;
			case VkFormat.G10X6B10X6R10X62Plane420Unorm3Pack16: return 6;
			case VkFormat.G10X6B10X6R10X63Plane422Unorm3Pack16: return 6;
			case VkFormat.G10X6B10X6R10X62Plane422Unorm3Pack16: return 6;
			case VkFormat.G10X6B10X6R10X63Plane444Unorm3Pack16: return 6;
			case VkFormat.R12X4UnormPack16: return 2;
			case VkFormat.R12X4G12X4Unorm2Pack16: return 4;
			case VkFormat.R12X4G12X4B12X4A12X4Unorm4Pack16: return 8;
			case VkFormat.G12X4B12X4G12X4R12X4422Unorm4Pack16: return 8;
			case VkFormat.B12X4G12X4R12X4G12X4422Unorm4Pack16: return 8;
			case VkFormat.G12X4B12X4R12X43Plane420Unorm3Pack16: return 6;
			case VkFormat.G12X4B12X4R12X42Plane420Unorm3Pack16: return 6;
			case VkFormat.G12X4B12X4R12X43Plane422Unorm3Pack16: return 6;
			case VkFormat.G12X4B12X4R12X42Plane422Unorm3Pack16: return 6;
			case VkFormat.G12X4B12X4R12X43Plane444Unorm3Pack16: return 6;
			case VkFormat.G16B16G16R16422Unorm: return 8;
			case VkFormat.B16G16R16G16422Unorm: return 8;
			case VkFormat.G16B16R163Plane420Unorm: return 6;
			case VkFormat.G16B16R162Plane420Unorm: return 6;
			case VkFormat.G16B16R163Plane422Unorm: return 6;
			case VkFormat.G16B16R162Plane422Unorm: return 6;
			case VkFormat.G16B16R163Plane444Unorm: return 6;
			case VkFormat.PVRTC12BPPUnormBlockImg: return 8;
			case VkFormat.PVRTC14BPPUnormBlockImg: return 8;
			case VkFormat.PVRTC22BPPUnormBlockImg: return 8;
			case VkFormat.PVRTC24BPPUnormBlockImg: return 8;
			case VkFormat.PVRTC12BPPSrgbBlockImg: return 8;
			case VkFormat.PVRTC14BPPSrgbBlockImg: return 8;
			case VkFormat.PVRTC22BPPSrgbBlockImg: return 8;
			case VkFormat.PVRTC24BPPSrgbBlockImg: return 8;
			case VkFormat.Astc4x4SfloatBlock: return 16;
			case VkFormat.Astc5x4SfloatBlock: return 16;
			case VkFormat.Astc5x5SfloatBlock: return 16;
			case VkFormat.Astc6x5SfloatBlock: return 16;
			case VkFormat.Astc6x6SfloatBlock: return 16;
			case VkFormat.Astc8x5SfloatBlock: return 16;
			case VkFormat.Astc8x6SfloatBlock: return 16;
			case VkFormat.Astc8x8SfloatBlock: return 16;
			case VkFormat.Astc10x5SfloatBlock: return 16;
			case VkFormat.Astc10x6SfloatBlock: return 16;
			case VkFormat.Astc10x8SfloatBlock: return 16;
			case VkFormat.Astc10x10SfloatBlock: return 16;
			case VkFormat.Astc12x10SfloatBlock: return 16;
			case VkFormat.Astc12x12SfloatBlock: return 16;
			case VkFormat.G8B8R82Plane444Unorm: return 3;
			case VkFormat.G10X6B10X6R10X62Plane444Unorm3Pack16: return 6;
			case VkFormat.G12X4B12X4R12X42Plane444Unorm3Pack16: return 6;
			case VkFormat.G16B16R162Plane444Unorm: return 6;
			case VkFormat.A4R4G4B4UnormPack16: return 2;
			case VkFormat.A4B4G4R4UnormPack16: return 2;
			case VkFormat.R16G16S105NV: return 4;

			default: return 0;
		}
	}
	public static int TexelsPerBlock(this VkFormat format)
	{
		switch(format)
		{
			case VkFormat.R4G4UnormPack8: return 1;
			case VkFormat.R4G4B4A4UnormPack16: return 1;
			case VkFormat.B4G4R4A4UnormPack16: return 1;
			case VkFormat.R5G6B5UnormPack16: return 1;
			case VkFormat.B5G6R5UnormPack16: return 1;
			case VkFormat.R5G5B5A1UnormPack16: return 1;
			case VkFormat.B5G5R5A1UnormPack16: return 1;
			case VkFormat.A1R5G5B5UnormPack16: return 1;
			case VkFormat.R8Unorm: return 1;
			case VkFormat.R8Snorm: return 1;
			case VkFormat.R8Uscaled: return 1;
			case VkFormat.R8Sscaled: return 1;
			case VkFormat.R8Uint: return 1;
			case VkFormat.R8Sint: return 1;
			case VkFormat.R8Srgb: return 1;
			case VkFormat.R8G8Unorm: return 1;
			case VkFormat.R8G8Snorm: return 1;
			case VkFormat.R8G8Uscaled: return 1;
			case VkFormat.R8G8Sscaled: return 1;
			case VkFormat.R8G8Uint: return 1;
			case VkFormat.R8G8Sint: return 1;
			case VkFormat.R8G8Srgb: return 1;
			case VkFormat.R8G8B8Unorm: return 1;
			case VkFormat.R8G8B8Snorm: return 1;
			case VkFormat.R8G8B8Uscaled: return 1;
			case VkFormat.R8G8B8Sscaled: return 1;
			case VkFormat.R8G8B8Uint: return 1;
			case VkFormat.R8G8B8Sint: return 1;
			case VkFormat.R8G8B8Srgb: return 1;
			case VkFormat.B8G8R8Unorm: return 1;
			case VkFormat.B8G8R8Snorm: return 1;
			case VkFormat.B8G8R8Uscaled: return 1;
			case VkFormat.B8G8R8Sscaled: return 1;
			case VkFormat.B8G8R8Uint: return 1;
			case VkFormat.B8G8R8Sint: return 1;
			case VkFormat.B8G8R8Srgb: return 1;
			case VkFormat.R8G8B8A8Unorm: return 1;
			case VkFormat.R8G8B8A8Snorm: return 1;
			case VkFormat.R8G8B8A8Uscaled: return 1;
			case VkFormat.R8G8B8A8Sscaled: return 1;
			case VkFormat.R8G8B8A8Uint: return 1;
			case VkFormat.R8G8B8A8Sint: return 1;
			case VkFormat.R8G8B8A8Srgb: return 1;
			case VkFormat.B8G8R8A8Unorm: return 1;
			case VkFormat.B8G8R8A8Snorm: return 1;
			case VkFormat.B8G8R8A8Uscaled: return 1;
			case VkFormat.B8G8R8A8Sscaled: return 1;
			case VkFormat.B8G8R8A8Uint: return 1;
			case VkFormat.B8G8R8A8Sint: return 1;
			case VkFormat.B8G8R8A8Srgb: return 1;
			case VkFormat.A8B8G8R8UnormPack32: return 1;
			case VkFormat.A8B8G8R8SnormPack32: return 1;
			case VkFormat.A8B8G8R8UscaledPack32: return 1;
			case VkFormat.A8B8G8R8SscaledPack32: return 1;
			case VkFormat.A8B8G8R8UintPack32: return 1;
			case VkFormat.A8B8G8R8SintPack32: return 1;
			case VkFormat.A8B8G8R8SrgbPack32: return 1;
			case VkFormat.A2R10G10B10UnormPack32: return 1;
			case VkFormat.A2R10G10B10SnormPack32: return 1;
			case VkFormat.A2R10G10B10UscaledPack32: return 1;
			case VkFormat.A2R10G10B10SscaledPack32: return 1;
			case VkFormat.A2R10G10B10UintPack32: return 1;
			case VkFormat.A2R10G10B10SintPack32: return 1;
			case VkFormat.A2B10G10R10UnormPack32: return 1;
			case VkFormat.A2B10G10R10SnormPack32: return 1;
			case VkFormat.A2B10G10R10UscaledPack32: return 1;
			case VkFormat.A2B10G10R10SscaledPack32: return 1;
			case VkFormat.A2B10G10R10UintPack32: return 1;
			case VkFormat.A2B10G10R10SintPack32: return 1;
			case VkFormat.R16Unorm: return 1;
			case VkFormat.R16Snorm: return 1;
			case VkFormat.R16Uscaled: return 1;
			case VkFormat.R16Sscaled: return 1;
			case VkFormat.R16Uint: return 1;
			case VkFormat.R16Sint: return 1;
			case VkFormat.R16Sfloat: return 1;
			case VkFormat.R16G16Unorm: return 1;
			case VkFormat.R16G16Snorm: return 1;
			case VkFormat.R16G16Uscaled: return 1;
			case VkFormat.R16G16Sscaled: return 1;
			case VkFormat.R16G16Uint: return 1;
			case VkFormat.R16G16Sint: return 1;
			case VkFormat.R16G16Sfloat: return 1;
			case VkFormat.R16G16B16Unorm: return 1;
			case VkFormat.R16G16B16Snorm: return 1;
			case VkFormat.R16G16B16Uscaled: return 1;
			case VkFormat.R16G16B16Sscaled: return 1;
			case VkFormat.R16G16B16Uint: return 1;
			case VkFormat.R16G16B16Sint: return 1;
			case VkFormat.R16G16B16Sfloat: return 1;
			case VkFormat.R16G16B16A16Unorm: return 1;
			case VkFormat.R16G16B16A16Snorm: return 1;
			case VkFormat.R16G16B16A16Uscaled: return 1;
			case VkFormat.R16G16B16A16Sscaled: return 1;
			case VkFormat.R16G16B16A16Uint: return 1;
			case VkFormat.R16G16B16A16Sint: return 1;
			case VkFormat.R16G16B16A16Sfloat: return 1;
			case VkFormat.R32Uint: return 1;
			case VkFormat.R32Sint: return 1;
			case VkFormat.R32Sfloat: return 1;
			case VkFormat.R32G32Uint: return 1;
			case VkFormat.R32G32Sint: return 1;
			case VkFormat.R32G32Sfloat: return 1;
			case VkFormat.R32G32B32Uint: return 1;
			case VkFormat.R32G32B32Sint: return 1;
			case VkFormat.R32G32B32Sfloat: return 1;
			case VkFormat.R32G32B32A32Uint: return 1;
			case VkFormat.R32G32B32A32Sint: return 1;
			case VkFormat.R32G32B32A32Sfloat: return 1;
			case VkFormat.R64Uint: return 1;
			case VkFormat.R64Sint: return 1;
			case VkFormat.R64Sfloat: return 1;
			case VkFormat.R64G64Uint: return 1;
			case VkFormat.R64G64Sint: return 1;
			case VkFormat.R64G64Sfloat: return 1;
			case VkFormat.R64G64B64Uint: return 1;
			case VkFormat.R64G64B64Sint: return 1;
			case VkFormat.R64G64B64Sfloat: return 1;
			case VkFormat.R64G64B64A64Uint: return 1;
			case VkFormat.R64G64B64A64Sint: return 1;
			case VkFormat.R64G64B64A64Sfloat: return 1;
			case VkFormat.B10G11R11UfloatPack32: return 1;
			case VkFormat.E5B9G9R9UfloatPack32: return 1;
			case VkFormat.D16Unorm: return 1;
			case VkFormat.X8D24UnormPack32: return 1;
			case VkFormat.D32Sfloat: return 1;
			case VkFormat.S8Uint: return 1;
			case VkFormat.D16UnormS8Uint: return 1;
			case VkFormat.D24UnormS8Uint: return 1;
			case VkFormat.D32SfloatS8Uint: return 1;
			case VkFormat.Bc1RgbUnormBlock: return 16;
			case VkFormat.Bc1RgbSrgbBlock: return 16;
			case VkFormat.Bc1RgbaUnormBlock: return 16;
			case VkFormat.Bc1RgbaSrgbBlock: return 16;
			case VkFormat.Bc2UnormBlock: return 16;
			case VkFormat.Bc2SrgbBlock: return 16;
			case VkFormat.Bc3UnormBlock: return 16;
			case VkFormat.Bc3SrgbBlock: return 16;
			case VkFormat.Bc4UnormBlock: return 16;
			case VkFormat.Bc4SnormBlock: return 16;
			case VkFormat.Bc5UnormBlock: return 16;
			case VkFormat.Bc5SnormBlock: return 16;
			case VkFormat.Bc6hUfloatBlock: return 16;
			case VkFormat.Bc6hSfloatBlock: return 16;
			case VkFormat.Bc7UnormBlock: return 16;
			case VkFormat.Bc7SrgbBlock: return 16;
			case VkFormat.Etc2R8G8B8UnormBlock: return 16;
			case VkFormat.Etc2R8G8B8SrgbBlock: return 16;
			case VkFormat.Etc2R8G8B8A1UnormBlock: return 16;
			case VkFormat.Etc2R8G8B8A1SrgbBlock: return 16;
			case VkFormat.Etc2R8G8B8A8UnormBlock: return 16;
			case VkFormat.Etc2R8G8B8A8SrgbBlock: return 16;
			case VkFormat.EacR11UnormBlock: return 16;
			case VkFormat.EacR11SnormBlock: return 16;
			case VkFormat.EacR11G11UnormBlock: return 16;
			case VkFormat.EacR11G11SnormBlock: return 16;
			case VkFormat.Astc4x4UnormBlock: return 16;
			case VkFormat.Astc4x4SrgbBlock: return 16;
			case VkFormat.Astc5x4UnormBlock: return 20;
			case VkFormat.Astc5x4SrgbBlock: return 20;
			case VkFormat.Astc5x5UnormBlock: return 25;
			case VkFormat.Astc5x5SrgbBlock: return 25;
			case VkFormat.Astc6x5UnormBlock: return 30;
			case VkFormat.Astc6x5SrgbBlock: return 30;
			case VkFormat.Astc6x6UnormBlock: return 36;
			case VkFormat.Astc6x6SrgbBlock: return 36;
			case VkFormat.Astc8x5UnormBlock: return 40;
			case VkFormat.Astc8x5SrgbBlock: return 40;
			case VkFormat.Astc8x6UnormBlock: return 48;
			case VkFormat.Astc8x6SrgbBlock: return 48;
			case VkFormat.Astc8x8UnormBlock: return 64;
			case VkFormat.Astc8x8SrgbBlock: return 64;
			case VkFormat.Astc10x5UnormBlock: return 50;
			case VkFormat.Astc10x5SrgbBlock: return 50;
			case VkFormat.Astc10x6UnormBlock: return 60;
			case VkFormat.Astc10x6SrgbBlock: return 60;
			case VkFormat.Astc10x8UnormBlock: return 80;
			case VkFormat.Astc10x8SrgbBlock: return 80;
			case VkFormat.Astc10x10UnormBlock: return 100;
			case VkFormat.Astc10x10SrgbBlock: return 100;
			case VkFormat.Astc12x10UnormBlock: return 120;
			case VkFormat.Astc12x10SrgbBlock: return 120;
			case VkFormat.Astc12x12UnormBlock: return 144;
			case VkFormat.Astc12x12SrgbBlock: return 144;
			case VkFormat.G8B8G8R8422Unorm: return 1;
			case VkFormat.B8G8R8G8422Unorm: return 1;
			case VkFormat.G8B8R83Plane420Unorm: return 1;
			case VkFormat.G8B8R82Plane420Unorm: return 1;
			case VkFormat.G8B8R83Plane422Unorm: return 1;
			case VkFormat.G8B8R82Plane422Unorm: return 1;
			case VkFormat.G8B8R83Plane444Unorm: return 1;
			case VkFormat.R10X6UnormPack16: return 1;
			case VkFormat.R10X6G10X6Unorm2Pack16: return 1;
			case VkFormat.R10X6G10X6B10X6A10X6Unorm4Pack16: return 1;
			case VkFormat.G10X6B10X6G10X6R10X6422Unorm4Pack16: return 1;
			case VkFormat.B10X6G10X6R10X6G10X6422Unorm4Pack16: return 1;
			case VkFormat.G10X6B10X6R10X63Plane420Unorm3Pack16: return 1;
			case VkFormat.G10X6B10X6R10X62Plane420Unorm3Pack16: return 1;
			case VkFormat.G10X6B10X6R10X63Plane422Unorm3Pack16: return 1;
			case VkFormat.G10X6B10X6R10X62Plane422Unorm3Pack16: return 1;
			case VkFormat.G10X6B10X6R10X63Plane444Unorm3Pack16: return 1;
			case VkFormat.R12X4UnormPack16: return 1;
			case VkFormat.R12X4G12X4Unorm2Pack16: return 1;
			case VkFormat.R12X4G12X4B12X4A12X4Unorm4Pack16: return 1;
			case VkFormat.G12X4B12X4G12X4R12X4422Unorm4Pack16: return 1;
			case VkFormat.B12X4G12X4R12X4G12X4422Unorm4Pack16: return 1;
			case VkFormat.G12X4B12X4R12X43Plane420Unorm3Pack16: return 1;
			case VkFormat.G12X4B12X4R12X42Plane420Unorm3Pack16: return 1;
			case VkFormat.G12X4B12X4R12X43Plane422Unorm3Pack16: return 1;
			case VkFormat.G12X4B12X4R12X42Plane422Unorm3Pack16: return 1;
			case VkFormat.G12X4B12X4R12X43Plane444Unorm3Pack16: return 1;
			case VkFormat.G16B16G16R16422Unorm: return 1;
			case VkFormat.B16G16R16G16422Unorm: return 1;
			case VkFormat.G16B16R163Plane420Unorm: return 1;
			case VkFormat.G16B16R162Plane420Unorm: return 1;
			case VkFormat.G16B16R163Plane422Unorm: return 1;
			case VkFormat.G16B16R162Plane422Unorm: return 1;
			case VkFormat.G16B16R163Plane444Unorm: return 1;
			case VkFormat.PVRTC12BPPUnormBlockImg: return 1;
			case VkFormat.PVRTC14BPPUnormBlockImg: return 1;
			case VkFormat.PVRTC22BPPUnormBlockImg: return 1;
			case VkFormat.PVRTC24BPPUnormBlockImg: return 1;
			case VkFormat.PVRTC12BPPSrgbBlockImg: return 1;
			case VkFormat.PVRTC14BPPSrgbBlockImg: return 1;
			case VkFormat.PVRTC22BPPSrgbBlockImg: return 1;
			case VkFormat.PVRTC24BPPSrgbBlockImg: return 1;
			case VkFormat.Astc4x4SfloatBlock: return 16;
			case VkFormat.Astc5x4SfloatBlock: return 20;
			case VkFormat.Astc5x5SfloatBlock: return 25;
			case VkFormat.Astc6x5SfloatBlock: return 30;
			case VkFormat.Astc6x6SfloatBlock: return 36;
			case VkFormat.Astc8x5SfloatBlock: return 40;
			case VkFormat.Astc8x6SfloatBlock: return 48;
			case VkFormat.Astc8x8SfloatBlock: return 64;
			case VkFormat.Astc10x5SfloatBlock: return 50;
			case VkFormat.Astc10x6SfloatBlock: return 60;
			case VkFormat.Astc10x8SfloatBlock: return 80;
			case VkFormat.Astc10x10SfloatBlock: return 100;
			case VkFormat.Astc12x10SfloatBlock: return 120;
			case VkFormat.Astc12x12SfloatBlock: return 144;
			case VkFormat.G8B8R82Plane444Unorm: return 1;
			case VkFormat.G10X6B10X6R10X62Plane444Unorm3Pack16: return 1;
			case VkFormat.G12X4B12X4R12X42Plane444Unorm3Pack16: return 1;
			case VkFormat.G16B16R162Plane444Unorm: return 1;
			case VkFormat.A4R4G4B4UnormPack16: return 1;
			case VkFormat.A4B4G4R4UnormPack16: return 1;
			case VkFormat.R16G16S105NV: return 1;

			default: return 0;
		}
	}
	public static string CompatibilityClass(this VkFormat format)
	{
		switch(format)
		{
			case VkFormat.R4G4UnormPack8: return "8-bit";
			case VkFormat.R4G4B4A4UnormPack16: return "16-bit";
			case VkFormat.B4G4R4A4UnormPack16: return "16-bit";
			case VkFormat.R5G6B5UnormPack16: return "16-bit";
			case VkFormat.B5G6R5UnormPack16: return "16-bit";
			case VkFormat.R5G5B5A1UnormPack16: return "16-bit";
			case VkFormat.B5G5R5A1UnormPack16: return "16-bit";
			case VkFormat.A1R5G5B5UnormPack16: return "16-bit";
			case VkFormat.R8Unorm: return "8-bit";
			case VkFormat.R8Snorm: return "8-bit";
			case VkFormat.R8Uscaled: return "8-bit";
			case VkFormat.R8Sscaled: return "8-bit";
			case VkFormat.R8Uint: return "8-bit";
			case VkFormat.R8Sint: return "8-bit";
			case VkFormat.R8Srgb: return "8-bit";
			case VkFormat.R8G8Unorm: return "16-bit";
			case VkFormat.R8G8Snorm: return "16-bit";
			case VkFormat.R8G8Uscaled: return "16-bit";
			case VkFormat.R8G8Sscaled: return "16-bit";
			case VkFormat.R8G8Uint: return "16-bit";
			case VkFormat.R8G8Sint: return "16-bit";
			case VkFormat.R8G8Srgb: return "16-bit";
			case VkFormat.R8G8B8Unorm: return "24-bit";
			case VkFormat.R8G8B8Snorm: return "24-bit";
			case VkFormat.R8G8B8Uscaled: return "24-bit";
			case VkFormat.R8G8B8Sscaled: return "24-bit";
			case VkFormat.R8G8B8Uint: return "24-bit";
			case VkFormat.R8G8B8Sint: return "24-bit";
			case VkFormat.R8G8B8Srgb: return "24-bit";
			case VkFormat.B8G8R8Unorm: return "24-bit";
			case VkFormat.B8G8R8Snorm: return "24-bit";
			case VkFormat.B8G8R8Uscaled: return "24-bit";
			case VkFormat.B8G8R8Sscaled: return "24-bit";
			case VkFormat.B8G8R8Uint: return "24-bit";
			case VkFormat.B8G8R8Sint: return "24-bit";
			case VkFormat.B8G8R8Srgb: return "24-bit";
			case VkFormat.R8G8B8A8Unorm: return "32-bit";
			case VkFormat.R8G8B8A8Snorm: return "32-bit";
			case VkFormat.R8G8B8A8Uscaled: return "32-bit";
			case VkFormat.R8G8B8A8Sscaled: return "32-bit";
			case VkFormat.R8G8B8A8Uint: return "32-bit";
			case VkFormat.R8G8B8A8Sint: return "32-bit";
			case VkFormat.R8G8B8A8Srgb: return "32-bit";
			case VkFormat.B8G8R8A8Unorm: return "32-bit";
			case VkFormat.B8G8R8A8Snorm: return "32-bit";
			case VkFormat.B8G8R8A8Uscaled: return "32-bit";
			case VkFormat.B8G8R8A8Sscaled: return "32-bit";
			case VkFormat.B8G8R8A8Uint: return "32-bit";
			case VkFormat.B8G8R8A8Sint: return "32-bit";
			case VkFormat.B8G8R8A8Srgb: return "32-bit";
			case VkFormat.A8B8G8R8UnormPack32: return "32-bit";
			case VkFormat.A8B8G8R8SnormPack32: return "32-bit";
			case VkFormat.A8B8G8R8UscaledPack32: return "32-bit";
			case VkFormat.A8B8G8R8SscaledPack32: return "32-bit";
			case VkFormat.A8B8G8R8UintPack32: return "32-bit";
			case VkFormat.A8B8G8R8SintPack32: return "32-bit";
			case VkFormat.A8B8G8R8SrgbPack32: return "32-bit";
			case VkFormat.A2R10G10B10UnormPack32: return "32-bit";
			case VkFormat.A2R10G10B10SnormPack32: return "32-bit";
			case VkFormat.A2R10G10B10UscaledPack32: return "32-bit";
			case VkFormat.A2R10G10B10SscaledPack32: return "32-bit";
			case VkFormat.A2R10G10B10UintPack32: return "32-bit";
			case VkFormat.A2R10G10B10SintPack32: return "32-bit";
			case VkFormat.A2B10G10R10UnormPack32: return "32-bit";
			case VkFormat.A2B10G10R10SnormPack32: return "32-bit";
			case VkFormat.A2B10G10R10UscaledPack32: return "32-bit";
			case VkFormat.A2B10G10R10SscaledPack32: return "32-bit";
			case VkFormat.A2B10G10R10UintPack32: return "32-bit";
			case VkFormat.A2B10G10R10SintPack32: return "32-bit";
			case VkFormat.R16Unorm: return "16-bit";
			case VkFormat.R16Snorm: return "16-bit";
			case VkFormat.R16Uscaled: return "16-bit";
			case VkFormat.R16Sscaled: return "16-bit";
			case VkFormat.R16Uint: return "16-bit";
			case VkFormat.R16Sint: return "16-bit";
			case VkFormat.R16Sfloat: return "16-bit";
			case VkFormat.R16G16Unorm: return "32-bit";
			case VkFormat.R16G16Snorm: return "32-bit";
			case VkFormat.R16G16Uscaled: return "32-bit";
			case VkFormat.R16G16Sscaled: return "32-bit";
			case VkFormat.R16G16Uint: return "32-bit";
			case VkFormat.R16G16Sint: return "32-bit";
			case VkFormat.R16G16Sfloat: return "32-bit";
			case VkFormat.R16G16B16Unorm: return "48-bit";
			case VkFormat.R16G16B16Snorm: return "48-bit";
			case VkFormat.R16G16B16Uscaled: return "48-bit";
			case VkFormat.R16G16B16Sscaled: return "48-bit";
			case VkFormat.R16G16B16Uint: return "48-bit";
			case VkFormat.R16G16B16Sint: return "48-bit";
			case VkFormat.R16G16B16Sfloat: return "48-bit";
			case VkFormat.R16G16B16A16Unorm: return "64-bit";
			case VkFormat.R16G16B16A16Snorm: return "64-bit";
			case VkFormat.R16G16B16A16Uscaled: return "64-bit";
			case VkFormat.R16G16B16A16Sscaled: return "64-bit";
			case VkFormat.R16G16B16A16Uint: return "64-bit";
			case VkFormat.R16G16B16A16Sint: return "64-bit";
			case VkFormat.R16G16B16A16Sfloat: return "64-bit";
			case VkFormat.R32Uint: return "32-bit";
			case VkFormat.R32Sint: return "32-bit";
			case VkFormat.R32Sfloat: return "32-bit";
			case VkFormat.R32G32Uint: return "64-bit";
			case VkFormat.R32G32Sint: return "64-bit";
			case VkFormat.R32G32Sfloat: return "64-bit";
			case VkFormat.R32G32B32Uint: return "96-bit";
			case VkFormat.R32G32B32Sint: return "96-bit";
			case VkFormat.R32G32B32Sfloat: return "96-bit";
			case VkFormat.R32G32B32A32Uint: return "128-bit";
			case VkFormat.R32G32B32A32Sint: return "128-bit";
			case VkFormat.R32G32B32A32Sfloat: return "128-bit";
			case VkFormat.R64Uint: return "64-bit";
			case VkFormat.R64Sint: return "64-bit";
			case VkFormat.R64Sfloat: return "64-bit";
			case VkFormat.R64G64Uint: return "128-bit";
			case VkFormat.R64G64Sint: return "128-bit";
			case VkFormat.R64G64Sfloat: return "128-bit";
			case VkFormat.R64G64B64Uint: return "192-bit";
			case VkFormat.R64G64B64Sint: return "192-bit";
			case VkFormat.R64G64B64Sfloat: return "192-bit";
			case VkFormat.R64G64B64A64Uint: return "256-bit";
			case VkFormat.R64G64B64A64Sint: return "256-bit";
			case VkFormat.R64G64B64A64Sfloat: return "256-bit";
			case VkFormat.B10G11R11UfloatPack32: return "32-bit";
			case VkFormat.E5B9G9R9UfloatPack32: return "32-bit";
			case VkFormat.D16Unorm: return "D16";
			case VkFormat.X8D24UnormPack32: return "D24";
			case VkFormat.D32Sfloat: return "D32";
			case VkFormat.S8Uint: return "S8";
			case VkFormat.D16UnormS8Uint: return "D16S8";
			case VkFormat.D24UnormS8Uint: return "D24S8";
			case VkFormat.D32SfloatS8Uint: return "D32S8";
			case VkFormat.Bc1RgbUnormBlock: return "BC1_RGB";
			case VkFormat.Bc1RgbSrgbBlock: return "BC1_RGB";
			case VkFormat.Bc1RgbaUnormBlock: return "BC1_RGBA";
			case VkFormat.Bc1RgbaSrgbBlock: return "BC1_RGBA";
			case VkFormat.Bc2UnormBlock: return "BC2";
			case VkFormat.Bc2SrgbBlock: return "BC2";
			case VkFormat.Bc3UnormBlock: return "BC3";
			case VkFormat.Bc3SrgbBlock: return "BC3";
			case VkFormat.Bc4UnormBlock: return "BC4";
			case VkFormat.Bc4SnormBlock: return "BC4";
			case VkFormat.Bc5UnormBlock: return "BC5";
			case VkFormat.Bc5SnormBlock: return "BC5";
			case VkFormat.Bc6hUfloatBlock: return "BC6H";
			case VkFormat.Bc6hSfloatBlock: return "BC6H";
			case VkFormat.Bc7UnormBlock: return "BC7";
			case VkFormat.Bc7SrgbBlock: return "BC7";
			case VkFormat.Etc2R8G8B8UnormBlock: return "ETC2_RGB";
			case VkFormat.Etc2R8G8B8SrgbBlock: return "ETC2_RGB";
			case VkFormat.Etc2R8G8B8A1UnormBlock: return "ETC2_RGBA";
			case VkFormat.Etc2R8G8B8A1SrgbBlock: return "ETC2_RGBA";
			case VkFormat.Etc2R8G8B8A8UnormBlock: return "ETC2_EAC_RGBA";
			case VkFormat.Etc2R8G8B8A8SrgbBlock: return "ETC2_EAC_RGBA";
			case VkFormat.EacR11UnormBlock: return "EAC_R";
			case VkFormat.EacR11SnormBlock: return "EAC_R";
			case VkFormat.EacR11G11UnormBlock: return "EAC_RG";
			case VkFormat.EacR11G11SnormBlock: return "EAC_RG";
			case VkFormat.Astc4x4UnormBlock: return "ASTC_4x4";
			case VkFormat.Astc4x4SrgbBlock: return "ASTC_4x4";
			case VkFormat.Astc5x4UnormBlock: return "ASTC_5x4";
			case VkFormat.Astc5x4SrgbBlock: return "ASTC_5x4";
			case VkFormat.Astc5x5UnormBlock: return "ASTC_5x5";
			case VkFormat.Astc5x5SrgbBlock: return "ASTC_5x5";
			case VkFormat.Astc6x5UnormBlock: return "ASTC_6x5";
			case VkFormat.Astc6x5SrgbBlock: return "ASTC_6x5";
			case VkFormat.Astc6x6UnormBlock: return "ASTC_6x6";
			case VkFormat.Astc6x6SrgbBlock: return "ASTC_6x6";
			case VkFormat.Astc8x5UnormBlock: return "ASTC_8x5";
			case VkFormat.Astc8x5SrgbBlock: return "ASTC_8x5";
			case VkFormat.Astc8x6UnormBlock: return "ASTC_8x6";
			case VkFormat.Astc8x6SrgbBlock: return "ASTC_8x6";
			case VkFormat.Astc8x8UnormBlock: return "ASTC_8x8";
			case VkFormat.Astc8x8SrgbBlock: return "ASTC_8x8";
			case VkFormat.Astc10x5UnormBlock: return "ASTC_10x5";
			case VkFormat.Astc10x5SrgbBlock: return "ASTC_10x5";
			case VkFormat.Astc10x6UnormBlock: return "ASTC_10x6";
			case VkFormat.Astc10x6SrgbBlock: return "ASTC_10x6";
			case VkFormat.Astc10x8UnormBlock: return "ASTC_10x8";
			case VkFormat.Astc10x8SrgbBlock: return "ASTC_10x8";
			case VkFormat.Astc10x10UnormBlock: return "ASTC_10x10";
			case VkFormat.Astc10x10SrgbBlock: return "ASTC_10x10";
			case VkFormat.Astc12x10UnormBlock: return "ASTC_12x10";
			case VkFormat.Astc12x10SrgbBlock: return "ASTC_12x10";
			case VkFormat.Astc12x12UnormBlock: return "ASTC_12x12";
			case VkFormat.Astc12x12SrgbBlock: return "ASTC_12x12";
			case VkFormat.G8B8G8R8422Unorm: return "32-bit G8B8G8R8";
			case VkFormat.B8G8R8G8422Unorm: return "32-bit B8G8R8G8";
			case VkFormat.G8B8R83Plane420Unorm: return "8-bit 3-plane 420";
			case VkFormat.G8B8R82Plane420Unorm: return "8-bit 2-plane 420";
			case VkFormat.G8B8R83Plane422Unorm: return "8-bit 3-plane 422";
			case VkFormat.G8B8R82Plane422Unorm: return "8-bit 2-plane 422";
			case VkFormat.G8B8R83Plane444Unorm: return "8-bit 3-plane 444";
			case VkFormat.R10X6UnormPack16: return "16-bit";
			case VkFormat.R10X6G10X6Unorm2Pack16: return "32-bit";
			case VkFormat.R10X6G10X6B10X6A10X6Unorm4Pack16: return "64-bit R10G10B10A10";
			case VkFormat.G10X6B10X6G10X6R10X6422Unorm4Pack16: return "64-bit G10B10G10R10";
			case VkFormat.B10X6G10X6R10X6G10X6422Unorm4Pack16: return "64-bit B10G10R10G10";
			case VkFormat.G10X6B10X6R10X63Plane420Unorm3Pack16: return "10-bit 3-plane 420";
			case VkFormat.G10X6B10X6R10X62Plane420Unorm3Pack16: return "10-bit 2-plane 420";
			case VkFormat.G10X6B10X6R10X63Plane422Unorm3Pack16: return "10-bit 3-plane 422";
			case VkFormat.G10X6B10X6R10X62Plane422Unorm3Pack16: return "10-bit 2-plane 422";
			case VkFormat.G10X6B10X6R10X63Plane444Unorm3Pack16: return "10-bit 3-plane 444";
			case VkFormat.R12X4UnormPack16: return "16-bit";
			case VkFormat.R12X4G12X4Unorm2Pack16: return "32-bit";
			case VkFormat.R12X4G12X4B12X4A12X4Unorm4Pack16: return "64-bit R12G12B12A12";
			case VkFormat.G12X4B12X4G12X4R12X4422Unorm4Pack16: return "64-bit G12B12G12R12";
			case VkFormat.B12X4G12X4R12X4G12X4422Unorm4Pack16: return "64-bit B12G12R12G12";
			case VkFormat.G12X4B12X4R12X43Plane420Unorm3Pack16: return "12-bit 3-plane 420";
			case VkFormat.G12X4B12X4R12X42Plane420Unorm3Pack16: return "12-bit 2-plane 420";
			case VkFormat.G12X4B12X4R12X43Plane422Unorm3Pack16: return "12-bit 3-plane 422";
			case VkFormat.G12X4B12X4R12X42Plane422Unorm3Pack16: return "12-bit 2-plane 422";
			case VkFormat.G12X4B12X4R12X43Plane444Unorm3Pack16: return "12-bit 3-plane 444";
			case VkFormat.G16B16G16R16422Unorm: return "64-bit G16B16G16R16";
			case VkFormat.B16G16R16G16422Unorm: return "64-bit B16G16R16G16";
			case VkFormat.G16B16R163Plane420Unorm: return "16-bit 3-plane 420";
			case VkFormat.G16B16R162Plane420Unorm: return "16-bit 2-plane 420";
			case VkFormat.G16B16R163Plane422Unorm: return "16-bit 3-plane 422";
			case VkFormat.G16B16R162Plane422Unorm: return "16-bit 2-plane 422";
			case VkFormat.G16B16R163Plane444Unorm: return "16-bit 3-plane 444";
			case VkFormat.PVRTC12BPPUnormBlockImg: return "PVRTC1_2BPP";
			case VkFormat.PVRTC14BPPUnormBlockImg: return "PVRTC1_4BPP";
			case VkFormat.PVRTC22BPPUnormBlockImg: return "PVRTC2_2BPP";
			case VkFormat.PVRTC24BPPUnormBlockImg: return "PVRTC2_4BPP";
			case VkFormat.PVRTC12BPPSrgbBlockImg: return "PVRTC1_2BPP";
			case VkFormat.PVRTC14BPPSrgbBlockImg: return "PVRTC1_4BPP";
			case VkFormat.PVRTC22BPPSrgbBlockImg: return "PVRTC2_2BPP";
			case VkFormat.PVRTC24BPPSrgbBlockImg: return "PVRTC2_4BPP";
			case VkFormat.Astc4x4SfloatBlock: return "ASTC_4x4";
			case VkFormat.Astc5x4SfloatBlock: return "ASTC_5x4";
			case VkFormat.Astc5x5SfloatBlock: return "ASTC_5x5";
			case VkFormat.Astc6x5SfloatBlock: return "ASTC_6x5";
			case VkFormat.Astc6x6SfloatBlock: return "ASTC_6x6";
			case VkFormat.Astc8x5SfloatBlock: return "ASTC_8x5";
			case VkFormat.Astc8x6SfloatBlock: return "ASTC_8x6";
			case VkFormat.Astc8x8SfloatBlock: return "ASTC_8x8";
			case VkFormat.Astc10x5SfloatBlock: return "ASTC_10x5";
			case VkFormat.Astc10x6SfloatBlock: return "ASTC_10x6";
			case VkFormat.Astc10x8SfloatBlock: return "ASTC_10x8";
			case VkFormat.Astc10x10SfloatBlock: return "ASTC_10x10";
			case VkFormat.Astc12x10SfloatBlock: return "ASTC_12x10";
			case VkFormat.Astc12x12SfloatBlock: return "ASTC_12x12";
			case VkFormat.G8B8R82Plane444Unorm: return "8-bit 2-plane 444";
			case VkFormat.G10X6B10X6R10X62Plane444Unorm3Pack16: return "10-bit 2-plane 444";
			case VkFormat.G12X4B12X4R12X42Plane444Unorm3Pack16: return "12-bit 2-plane 444";
			case VkFormat.G16B16R162Plane444Unorm: return "16-bit 2-plane 444";
			case VkFormat.A4R4G4B4UnormPack16: return "16-bit";
			case VkFormat.A4B4G4R4UnormPack16: return "16-bit";
			case VkFormat.R16G16S105NV: return "32-bit";

			default: return string.Empty;
		}
	}
	public static int ComponentCount(this VkFormat format)
	{
		switch(format)
		{
			case VkFormat.R4G4UnormPack8: return 2;
			case VkFormat.R4G4B4A4UnormPack16: return 4;
			case VkFormat.B4G4R4A4UnormPack16: return 4;
			case VkFormat.R5G6B5UnormPack16: return 3;
			case VkFormat.B5G6R5UnormPack16: return 3;
			case VkFormat.R5G5B5A1UnormPack16: return 4;
			case VkFormat.B5G5R5A1UnormPack16: return 4;
			case VkFormat.A1R5G5B5UnormPack16: return 4;
			case VkFormat.R8Unorm: return 1;
			case VkFormat.R8Snorm: return 1;
			case VkFormat.R8Uscaled: return 1;
			case VkFormat.R8Sscaled: return 1;
			case VkFormat.R8Uint: return 1;
			case VkFormat.R8Sint: return 1;
			case VkFormat.R8Srgb: return 1;
			case VkFormat.R8G8Unorm: return 2;
			case VkFormat.R8G8Snorm: return 2;
			case VkFormat.R8G8Uscaled: return 2;
			case VkFormat.R8G8Sscaled: return 2;
			case VkFormat.R8G8Uint: return 2;
			case VkFormat.R8G8Sint: return 2;
			case VkFormat.R8G8Srgb: return 2;
			case VkFormat.R8G8B8Unorm: return 3;
			case VkFormat.R8G8B8Snorm: return 3;
			case VkFormat.R8G8B8Uscaled: return 3;
			case VkFormat.R8G8B8Sscaled: return 3;
			case VkFormat.R8G8B8Uint: return 3;
			case VkFormat.R8G8B8Sint: return 3;
			case VkFormat.R8G8B8Srgb: return 3;
			case VkFormat.B8G8R8Unorm: return 3;
			case VkFormat.B8G8R8Snorm: return 3;
			case VkFormat.B8G8R8Uscaled: return 3;
			case VkFormat.B8G8R8Sscaled: return 3;
			case VkFormat.B8G8R8Uint: return 3;
			case VkFormat.B8G8R8Sint: return 3;
			case VkFormat.B8G8R8Srgb: return 3;
			case VkFormat.R8G8B8A8Unorm: return 4;
			case VkFormat.R8G8B8A8Snorm: return 4;
			case VkFormat.R8G8B8A8Uscaled: return 4;
			case VkFormat.R8G8B8A8Sscaled: return 4;
			case VkFormat.R8G8B8A8Uint: return 4;
			case VkFormat.R8G8B8A8Sint: return 4;
			case VkFormat.R8G8B8A8Srgb: return 4;
			case VkFormat.B8G8R8A8Unorm: return 4;
			case VkFormat.B8G8R8A8Snorm: return 4;
			case VkFormat.B8G8R8A8Uscaled: return 4;
			case VkFormat.B8G8R8A8Sscaled: return 4;
			case VkFormat.B8G8R8A8Uint: return 4;
			case VkFormat.B8G8R8A8Sint: return 4;
			case VkFormat.B8G8R8A8Srgb: return 4;
			case VkFormat.A8B8G8R8UnormPack32: return 4;
			case VkFormat.A8B8G8R8SnormPack32: return 4;
			case VkFormat.A8B8G8R8UscaledPack32: return 4;
			case VkFormat.A8B8G8R8SscaledPack32: return 4;
			case VkFormat.A8B8G8R8UintPack32: return 4;
			case VkFormat.A8B8G8R8SintPack32: return 4;
			case VkFormat.A8B8G8R8SrgbPack32: return 4;
			case VkFormat.A2R10G10B10UnormPack32: return 4;
			case VkFormat.A2R10G10B10SnormPack32: return 4;
			case VkFormat.A2R10G10B10UscaledPack32: return 4;
			case VkFormat.A2R10G10B10SscaledPack32: return 4;
			case VkFormat.A2R10G10B10UintPack32: return 4;
			case VkFormat.A2R10G10B10SintPack32: return 4;
			case VkFormat.A2B10G10R10UnormPack32: return 4;
			case VkFormat.A2B10G10R10SnormPack32: return 4;
			case VkFormat.A2B10G10R10UscaledPack32: return 4;
			case VkFormat.A2B10G10R10SscaledPack32: return 4;
			case VkFormat.A2B10G10R10UintPack32: return 4;
			case VkFormat.A2B10G10R10SintPack32: return 4;
			case VkFormat.R16Unorm: return 1;
			case VkFormat.R16Snorm: return 1;
			case VkFormat.R16Uscaled: return 1;
			case VkFormat.R16Sscaled: return 1;
			case VkFormat.R16Uint: return 1;
			case VkFormat.R16Sint: return 1;
			case VkFormat.R16Sfloat: return 1;
			case VkFormat.R16G16Unorm: return 2;
			case VkFormat.R16G16Snorm: return 2;
			case VkFormat.R16G16Uscaled: return 2;
			case VkFormat.R16G16Sscaled: return 2;
			case VkFormat.R16G16Uint: return 2;
			case VkFormat.R16G16Sint: return 2;
			case VkFormat.R16G16Sfloat: return 2;
			case VkFormat.R16G16B16Unorm: return 3;
			case VkFormat.R16G16B16Snorm: return 3;
			case VkFormat.R16G16B16Uscaled: return 3;
			case VkFormat.R16G16B16Sscaled: return 3;
			case VkFormat.R16G16B16Uint: return 3;
			case VkFormat.R16G16B16Sint: return 3;
			case VkFormat.R16G16B16Sfloat: return 3;
			case VkFormat.R16G16B16A16Unorm: return 4;
			case VkFormat.R16G16B16A16Snorm: return 4;
			case VkFormat.R16G16B16A16Uscaled: return 4;
			case VkFormat.R16G16B16A16Sscaled: return 4;
			case VkFormat.R16G16B16A16Uint: return 4;
			case VkFormat.R16G16B16A16Sint: return 4;
			case VkFormat.R16G16B16A16Sfloat: return 4;
			case VkFormat.R32Uint: return 1;
			case VkFormat.R32Sint: return 1;
			case VkFormat.R32Sfloat: return 1;
			case VkFormat.R32G32Uint: return 2;
			case VkFormat.R32G32Sint: return 2;
			case VkFormat.R32G32Sfloat: return 2;
			case VkFormat.R32G32B32Uint: return 3;
			case VkFormat.R32G32B32Sint: return 3;
			case VkFormat.R32G32B32Sfloat: return 3;
			case VkFormat.R32G32B32A32Uint: return 4;
			case VkFormat.R32G32B32A32Sint: return 4;
			case VkFormat.R32G32B32A32Sfloat: return 4;
			case VkFormat.R64Uint: return 1;
			case VkFormat.R64Sint: return 1;
			case VkFormat.R64Sfloat: return 1;
			case VkFormat.R64G64Uint: return 2;
			case VkFormat.R64G64Sint: return 2;
			case VkFormat.R64G64Sfloat: return 2;
			case VkFormat.R64G64B64Uint: return 3;
			case VkFormat.R64G64B64Sint: return 3;
			case VkFormat.R64G64B64Sfloat: return 3;
			case VkFormat.R64G64B64A64Uint: return 4;
			case VkFormat.R64G64B64A64Sint: return 4;
			case VkFormat.R64G64B64A64Sfloat: return 4;
			case VkFormat.B10G11R11UfloatPack32: return 3;
			case VkFormat.E5B9G9R9UfloatPack32: return 3;
			case VkFormat.D16Unorm: return 1;
			case VkFormat.X8D24UnormPack32: return 1;
			case VkFormat.D32Sfloat: return 1;
			case VkFormat.S8Uint: return 1;
			case VkFormat.D16UnormS8Uint: return 2;
			case VkFormat.D24UnormS8Uint: return 2;
			case VkFormat.D32SfloatS8Uint: return 2;
			case VkFormat.Bc1RgbUnormBlock: return 3;
			case VkFormat.Bc1RgbSrgbBlock: return 3;
			case VkFormat.Bc1RgbaUnormBlock: return 4;
			case VkFormat.Bc1RgbaSrgbBlock: return 4;
			case VkFormat.Bc2UnormBlock: return 4;
			case VkFormat.Bc2SrgbBlock: return 4;
			case VkFormat.Bc3UnormBlock: return 4;
			case VkFormat.Bc3SrgbBlock: return 4;
			case VkFormat.Bc4UnormBlock: return 1;
			case VkFormat.Bc4SnormBlock: return 1;
			case VkFormat.Bc5UnormBlock: return 2;
			case VkFormat.Bc5SnormBlock: return 2;
			case VkFormat.Bc6hUfloatBlock: return 3;
			case VkFormat.Bc6hSfloatBlock: return 3;
			case VkFormat.Bc7UnormBlock: return 4;
			case VkFormat.Bc7SrgbBlock: return 4;
			case VkFormat.Etc2R8G8B8UnormBlock: return 3;
			case VkFormat.Etc2R8G8B8SrgbBlock: return 3;
			case VkFormat.Etc2R8G8B8A1UnormBlock: return 4;
			case VkFormat.Etc2R8G8B8A1SrgbBlock: return 4;
			case VkFormat.Etc2R8G8B8A8UnormBlock: return 4;
			case VkFormat.Etc2R8G8B8A8SrgbBlock: return 4;
			case VkFormat.EacR11UnormBlock: return 1;
			case VkFormat.EacR11SnormBlock: return 1;
			case VkFormat.EacR11G11UnormBlock: return 2;
			case VkFormat.EacR11G11SnormBlock: return 2;
			case VkFormat.Astc4x4UnormBlock: return 4;
			case VkFormat.Astc4x4SrgbBlock: return 4;
			case VkFormat.Astc5x4UnormBlock: return 4;
			case VkFormat.Astc5x4SrgbBlock: return 4;
			case VkFormat.Astc5x5UnormBlock: return 4;
			case VkFormat.Astc5x5SrgbBlock: return 4;
			case VkFormat.Astc6x5UnormBlock: return 4;
			case VkFormat.Astc6x5SrgbBlock: return 4;
			case VkFormat.Astc6x6UnormBlock: return 4;
			case VkFormat.Astc6x6SrgbBlock: return 4;
			case VkFormat.Astc8x5UnormBlock: return 4;
			case VkFormat.Astc8x5SrgbBlock: return 4;
			case VkFormat.Astc8x6UnormBlock: return 4;
			case VkFormat.Astc8x6SrgbBlock: return 4;
			case VkFormat.Astc8x8UnormBlock: return 4;
			case VkFormat.Astc8x8SrgbBlock: return 4;
			case VkFormat.Astc10x5UnormBlock: return 4;
			case VkFormat.Astc10x5SrgbBlock: return 4;
			case VkFormat.Astc10x6UnormBlock: return 4;
			case VkFormat.Astc10x6SrgbBlock: return 4;
			case VkFormat.Astc10x8UnormBlock: return 4;
			case VkFormat.Astc10x8SrgbBlock: return 4;
			case VkFormat.Astc10x10UnormBlock: return 4;
			case VkFormat.Astc10x10SrgbBlock: return 4;
			case VkFormat.Astc12x10UnormBlock: return 4;
			case VkFormat.Astc12x10SrgbBlock: return 4;
			case VkFormat.Astc12x12UnormBlock: return 4;
			case VkFormat.Astc12x12SrgbBlock: return 4;
			case VkFormat.G8B8G8R8422Unorm: return 4;
			case VkFormat.B8G8R8G8422Unorm: return 4;
			case VkFormat.G8B8R83Plane420Unorm: return 3;
			case VkFormat.G8B8R82Plane420Unorm: return 3;
			case VkFormat.G8B8R83Plane422Unorm: return 3;
			case VkFormat.G8B8R82Plane422Unorm: return 3;
			case VkFormat.G8B8R83Plane444Unorm: return 3;
			case VkFormat.R10X6UnormPack16: return 1;
			case VkFormat.R10X6G10X6Unorm2Pack16: return 2;
			case VkFormat.R10X6G10X6B10X6A10X6Unorm4Pack16: return 4;
			case VkFormat.G10X6B10X6G10X6R10X6422Unorm4Pack16: return 4;
			case VkFormat.B10X6G10X6R10X6G10X6422Unorm4Pack16: return 4;
			case VkFormat.G10X6B10X6R10X63Plane420Unorm3Pack16: return 3;
			case VkFormat.G10X6B10X6R10X62Plane420Unorm3Pack16: return 3;
			case VkFormat.G10X6B10X6R10X63Plane422Unorm3Pack16: return 3;
			case VkFormat.G10X6B10X6R10X62Plane422Unorm3Pack16: return 3;
			case VkFormat.G10X6B10X6R10X63Plane444Unorm3Pack16: return 3;
			case VkFormat.R12X4UnormPack16: return 1;
			case VkFormat.R12X4G12X4Unorm2Pack16: return 2;
			case VkFormat.R12X4G12X4B12X4A12X4Unorm4Pack16: return 4;
			case VkFormat.G12X4B12X4G12X4R12X4422Unorm4Pack16: return 4;
			case VkFormat.B12X4G12X4R12X4G12X4422Unorm4Pack16: return 4;
			case VkFormat.G12X4B12X4R12X43Plane420Unorm3Pack16: return 3;
			case VkFormat.G12X4B12X4R12X42Plane420Unorm3Pack16: return 3;
			case VkFormat.G12X4B12X4R12X43Plane422Unorm3Pack16: return 3;
			case VkFormat.G12X4B12X4R12X42Plane422Unorm3Pack16: return 3;
			case VkFormat.G12X4B12X4R12X43Plane444Unorm3Pack16: return 3;
			case VkFormat.G16B16G16R16422Unorm: return 4;
			case VkFormat.B16G16R16G16422Unorm: return 4;
			case VkFormat.G16B16R163Plane420Unorm: return 3;
			case VkFormat.G16B16R162Plane420Unorm: return 3;
			case VkFormat.G16B16R163Plane422Unorm: return 3;
			case VkFormat.G16B16R162Plane422Unorm: return 3;
			case VkFormat.G16B16R163Plane444Unorm: return 3;
			case VkFormat.PVRTC12BPPUnormBlockImg: return 4;
			case VkFormat.PVRTC14BPPUnormBlockImg: return 4;
			case VkFormat.PVRTC22BPPUnormBlockImg: return 4;
			case VkFormat.PVRTC24BPPUnormBlockImg: return 4;
			case VkFormat.PVRTC12BPPSrgbBlockImg: return 4;
			case VkFormat.PVRTC14BPPSrgbBlockImg: return 4;
			case VkFormat.PVRTC22BPPSrgbBlockImg: return 4;
			case VkFormat.PVRTC24BPPSrgbBlockImg: return 4;
			case VkFormat.Astc4x4SfloatBlock: return 4;
			case VkFormat.Astc5x4SfloatBlock: return 4;
			case VkFormat.Astc5x5SfloatBlock: return 4;
			case VkFormat.Astc6x5SfloatBlock: return 4;
			case VkFormat.Astc6x6SfloatBlock: return 4;
			case VkFormat.Astc8x5SfloatBlock: return 4;
			case VkFormat.Astc8x6SfloatBlock: return 4;
			case VkFormat.Astc8x8SfloatBlock: return 4;
			case VkFormat.Astc10x5SfloatBlock: return 4;
			case VkFormat.Astc10x6SfloatBlock: return 4;
			case VkFormat.Astc10x8SfloatBlock: return 4;
			case VkFormat.Astc10x10SfloatBlock: return 4;
			case VkFormat.Astc12x10SfloatBlock: return 4;
			case VkFormat.Astc12x12SfloatBlock: return 4;
			case VkFormat.G8B8R82Plane444Unorm: return 3;
			case VkFormat.G10X6B10X6R10X62Plane444Unorm3Pack16: return 3;
			case VkFormat.G12X4B12X4R12X42Plane444Unorm3Pack16: return 3;
			case VkFormat.G16B16R162Plane444Unorm: return 3;
			case VkFormat.A4R4G4B4UnormPack16: return 4;
			case VkFormat.A4B4G4R4UnormPack16: return 4;
			case VkFormat.R16G16S105NV: return 2;

			default: return 0;
		}
	}
	public static byte ComponentBits(this VkFormat format, int component)
	{
		switch (format)
		{
			case VkFormat.R4G4UnormPack8:
				switch (component)
				{
					case 0: return 4;
					case 1: return 4;
					default: return 0;
				}
			case VkFormat.R4G4B4A4UnormPack16:
				switch (component)
				{
					case 0: return 4;
					case 1: return 4;
					case 2: return 4;
					case 3: return 4;
					default: return 0;
				}
			case VkFormat.B4G4R4A4UnormPack16:
				switch (component)
				{
					case 0: return 4;
					case 1: return 4;
					case 2: return 4;
					case 3: return 4;
					default: return 0;
				}
			case VkFormat.R5G6B5UnormPack16:
				switch (component)
				{
					case 0: return 5;
					case 1: return 6;
					case 2: return 5;
					default: return 0;
				}
			case VkFormat.B5G6R5UnormPack16:
				switch (component)
				{
					case 0: return 5;
					case 1: return 6;
					case 2: return 5;
					default: return 0;
				}
			case VkFormat.R5G5B5A1UnormPack16:
				switch (component)
				{
					case 0: return 5;
					case 1: return 5;
					case 2: return 5;
					case 3: return 1;
					default: return 0;
				}
			case VkFormat.B5G5R5A1UnormPack16:
				switch (component)
				{
					case 0: return 5;
					case 1: return 5;
					case 2: return 5;
					case 3: return 1;
					default: return 0;
				}
			case VkFormat.A1R5G5B5UnormPack16:
				switch (component)
				{
					case 0: return 1;
					case 1: return 5;
					case 2: return 5;
					case 3: return 5;
					default: return 0;
				}
			case VkFormat.R8Unorm:
				switch (component)
				{
					case 0: return 8;
					default: return 0;
				}
			case VkFormat.R8Snorm:
				switch (component)
				{
					case 0: return 8;
					default: return 0;
				}
			case VkFormat.R8Uscaled:
				switch (component)
				{
					case 0: return 8;
					default: return 0;
				}
			case VkFormat.R8Sscaled:
				switch (component)
				{
					case 0: return 8;
					default: return 0;
				}
			case VkFormat.R8Uint:
				switch (component)
				{
					case 0: return 8;
					default: return 0;
				}
			case VkFormat.R8Sint:
				switch (component)
				{
					case 0: return 8;
					default: return 0;
				}
			case VkFormat.R8Srgb:
				switch (component)
				{
					case 0: return 8;
					default: return 0;
				}
			case VkFormat.R8G8Unorm:
				switch (component)
				{
					case 0: return 8;
					case 1: return 8;
					default: return 0;
				}
			case VkFormat.R8G8Snorm:
				switch (component)
				{
					case 0: return 8;
					case 1: return 8;
					default: return 0;
				}
			case VkFormat.R8G8Uscaled:
				switch (component)
				{
					case 0: return 8;
					case 1: return 8;
					default: return 0;
				}
			case VkFormat.R8G8Sscaled:
				switch (component)
				{
					case 0: return 8;
					case 1: return 8;
					default: return 0;
				}
			case VkFormat.R8G8Uint:
				switch (component)
				{
					case 0: return 8;
					case 1: return 8;
					default: return 0;
				}
			case VkFormat.R8G8Sint:
				switch (component)
				{
					case 0: return 8;
					case 1: return 8;
					default: return 0;
				}
			case VkFormat.R8G8Srgb:
				switch (component)
				{
					case 0: return 8;
					case 1: return 8;
					default: return 0;
				}
			case VkFormat.R8G8B8Unorm:
				switch (component)
				{
					case 0: return 8;
					case 1: return 8;
					case 2: return 8;
					default: return 0;
				}
			case VkFormat.R8G8B8Snorm:
				switch (component)
				{
					case 0: return 8;
					case 1: return 8;
					case 2: return 8;
					default: return 0;
				}
			case VkFormat.R8G8B8Uscaled:
				switch (component)
				{
					case 0: return 8;
					case 1: return 8;
					case 2: return 8;
					default: return 0;
				}
			case VkFormat.R8G8B8Sscaled:
				switch (component)
				{
					case 0: return 8;
					case 1: return 8;
					case 2: return 8;
					default: return 0;
				}
			case VkFormat.R8G8B8Uint:
				switch (component)
				{
					case 0: return 8;
					case 1: return 8;
					case 2: return 8;
					default: return 0;
				}
			case VkFormat.R8G8B8Sint:
				switch (component)
				{
					case 0: return 8;
					case 1: return 8;
					case 2: return 8;
					default: return 0;
				}
			case VkFormat.R8G8B8Srgb:
				switch (component)
				{
					case 0: return 8;
					case 1: return 8;
					case 2: return 8;
					default: return 0;
				}
			case VkFormat.B8G8R8Unorm:
				switch (component)
				{
					case 0: return 8;
					case 1: return 8;
					case 2: return 8;
					default: return 0;
				}
			case VkFormat.B8G8R8Snorm:
				switch (component)
				{
					case 0: return 8;
					case 1: return 8;
					case 2: return 8;
					default: return 0;
				}
			case VkFormat.B8G8R8Uscaled:
				switch (component)
				{
					case 0: return 8;
					case 1: return 8;
					case 2: return 8;
					default: return 0;
				}
			case VkFormat.B8G8R8Sscaled:
				switch (component)
				{
					case 0: return 8;
					case 1: return 8;
					case 2: return 8;
					default: return 0;
				}
			case VkFormat.B8G8R8Uint:
				switch (component)
				{
					case 0: return 8;
					case 1: return 8;
					case 2: return 8;
					default: return 0;
				}
			case VkFormat.B8G8R8Sint:
				switch (component)
				{
					case 0: return 8;
					case 1: return 8;
					case 2: return 8;
					default: return 0;
				}
			case VkFormat.B8G8R8Srgb:
				switch (component)
				{
					case 0: return 8;
					case 1: return 8;
					case 2: return 8;
					default: return 0;
				}
			case VkFormat.R8G8B8A8Unorm:
				switch (component)
				{
					case 0: return 8;
					case 1: return 8;
					case 2: return 8;
					case 3: return 8;
					default: return 0;
				}
			case VkFormat.R8G8B8A8Snorm:
				switch (component)
				{
					case 0: return 8;
					case 1: return 8;
					case 2: return 8;
					case 3: return 8;
					default: return 0;
				}
			case VkFormat.R8G8B8A8Uscaled:
				switch (component)
				{
					case 0: return 8;
					case 1: return 8;
					case 2: return 8;
					case 3: return 8;
					default: return 0;
				}
			case VkFormat.R8G8B8A8Sscaled:
				switch (component)
				{
					case 0: return 8;
					case 1: return 8;
					case 2: return 8;
					case 3: return 8;
					default: return 0;
				}
			case VkFormat.R8G8B8A8Uint:
				switch (component)
				{
					case 0: return 8;
					case 1: return 8;
					case 2: return 8;
					case 3: return 8;
					default: return 0;
				}
			case VkFormat.R8G8B8A8Sint:
				switch (component)
				{
					case 0: return 8;
					case 1: return 8;
					case 2: return 8;
					case 3: return 8;
					default: return 0;
				}
			case VkFormat.R8G8B8A8Srgb:
				switch (component)
				{
					case 0: return 8;
					case 1: return 8;
					case 2: return 8;
					case 3: return 8;
					default: return 0;
				}
			case VkFormat.B8G8R8A8Unorm:
				switch (component)
				{
					case 0: return 8;
					case 1: return 8;
					case 2: return 8;
					case 3: return 8;
					default: return 0;
				}
			case VkFormat.B8G8R8A8Snorm:
				switch (component)
				{
					case 0: return 8;
					case 1: return 8;
					case 2: return 8;
					case 3: return 8;
					default: return 0;
				}
			case VkFormat.B8G8R8A8Uscaled:
				switch (component)
				{
					case 0: return 8;
					case 1: return 8;
					case 2: return 8;
					case 3: return 8;
					default: return 0;
				}
			case VkFormat.B8G8R8A8Sscaled:
				switch (component)
				{
					case 0: return 8;
					case 1: return 8;
					case 2: return 8;
					case 3: return 8;
					default: return 0;
				}
			case VkFormat.B8G8R8A8Uint:
				switch (component)
				{
					case 0: return 8;
					case 1: return 8;
					case 2: return 8;
					case 3: return 8;
					default: return 0;
				}
			case VkFormat.B8G8R8A8Sint:
				switch (component)
				{
					case 0: return 8;
					case 1: return 8;
					case 2: return 8;
					case 3: return 8;
					default: return 0;
				}
			case VkFormat.B8G8R8A8Srgb:
				switch (component)
				{
					case 0: return 8;
					case 1: return 8;
					case 2: return 8;
					case 3: return 8;
					default: return 0;
				}
			case VkFormat.A8B8G8R8UnormPack32:
				switch (component)
				{
					case 0: return 8;
					case 1: return 8;
					case 2: return 8;
					case 3: return 8;
					default: return 0;
				}
			case VkFormat.A8B8G8R8SnormPack32:
				switch (component)
				{
					case 0: return 8;
					case 1: return 8;
					case 2: return 8;
					case 3: return 8;
					default: return 0;
				}
			case VkFormat.A8B8G8R8UscaledPack32:
				switch (component)
				{
					case 0: return 8;
					case 1: return 8;
					case 2: return 8;
					case 3: return 8;
					default: return 0;
				}
			case VkFormat.A8B8G8R8SscaledPack32:
				switch (component)
				{
					case 0: return 8;
					case 1: return 8;
					case 2: return 8;
					case 3: return 8;
					default: return 0;
				}
			case VkFormat.A8B8G8R8UintPack32:
				switch (component)
				{
					case 0: return 8;
					case 1: return 8;
					case 2: return 8;
					case 3: return 8;
					default: return 0;
				}
			case VkFormat.A8B8G8R8SintPack32:
				switch (component)
				{
					case 0: return 8;
					case 1: return 8;
					case 2: return 8;
					case 3: return 8;
					default: return 0;
				}
			case VkFormat.A8B8G8R8SrgbPack32:
				switch (component)
				{
					case 0: return 8;
					case 1: return 8;
					case 2: return 8;
					case 3: return 8;
					default: return 0;
				}
			case VkFormat.A2R10G10B10UnormPack32:
				switch (component)
				{
					case 0: return 2;
					case 1: return 10;
					case 2: return 10;
					case 3: return 10;
					default: return 0;
				}
			case VkFormat.A2R10G10B10SnormPack32:
				switch (component)
				{
					case 0: return 2;
					case 1: return 10;
					case 2: return 10;
					case 3: return 10;
					default: return 0;
				}
			case VkFormat.A2R10G10B10UscaledPack32:
				switch (component)
				{
					case 0: return 2;
					case 1: return 10;
					case 2: return 10;
					case 3: return 10;
					default: return 0;
				}
			case VkFormat.A2R10G10B10SscaledPack32:
				switch (component)
				{
					case 0: return 2;
					case 1: return 10;
					case 2: return 10;
					case 3: return 10;
					default: return 0;
				}
			case VkFormat.A2R10G10B10UintPack32:
				switch (component)
				{
					case 0: return 2;
					case 1: return 10;
					case 2: return 10;
					case 3: return 10;
					default: return 0;
				}
			case VkFormat.A2R10G10B10SintPack32:
				switch (component)
				{
					case 0: return 2;
					case 1: return 10;
					case 2: return 10;
					case 3: return 10;
					default: return 0;
				}
			case VkFormat.A2B10G10R10UnormPack32:
				switch (component)
				{
					case 0: return 2;
					case 1: return 10;
					case 2: return 10;
					case 3: return 10;
					default: return 0;
				}
			case VkFormat.A2B10G10R10SnormPack32:
				switch (component)
				{
					case 0: return 2;
					case 1: return 10;
					case 2: return 10;
					case 3: return 10;
					default: return 0;
				}
			case VkFormat.A2B10G10R10UscaledPack32:
				switch (component)
				{
					case 0: return 2;
					case 1: return 10;
					case 2: return 10;
					case 3: return 10;
					default: return 0;
				}
			case VkFormat.A2B10G10R10SscaledPack32:
				switch (component)
				{
					case 0: return 2;
					case 1: return 10;
					case 2: return 10;
					case 3: return 10;
					default: return 0;
				}
			case VkFormat.A2B10G10R10UintPack32:
				switch (component)
				{
					case 0: return 2;
					case 1: return 10;
					case 2: return 10;
					case 3: return 10;
					default: return 0;
				}
			case VkFormat.A2B10G10R10SintPack32:
				switch (component)
				{
					case 0: return 2;
					case 1: return 10;
					case 2: return 10;
					case 3: return 10;
					default: return 0;
				}
			case VkFormat.R16Unorm:
				switch (component)
				{
					case 0: return 16;
					default: return 0;
				}
			case VkFormat.R16Snorm:
				switch (component)
				{
					case 0: return 16;
					default: return 0;
				}
			case VkFormat.R16Uscaled:
				switch (component)
				{
					case 0: return 16;
					default: return 0;
				}
			case VkFormat.R16Sscaled:
				switch (component)
				{
					case 0: return 16;
					default: return 0;
				}
			case VkFormat.R16Uint:
				switch (component)
				{
					case 0: return 16;
					default: return 0;
				}
			case VkFormat.R16Sint:
				switch (component)
				{
					case 0: return 16;
					default: return 0;
				}
			case VkFormat.R16Sfloat:
				switch (component)
				{
					case 0: return 16;
					default: return 0;
				}
			case VkFormat.R16G16Unorm:
				switch (component)
				{
					case 0: return 16;
					case 1: return 16;
					default: return 0;
				}
			case VkFormat.R16G16Snorm:
				switch (component)
				{
					case 0: return 16;
					case 1: return 16;
					default: return 0;
				}
			case VkFormat.R16G16Uscaled:
				switch (component)
				{
					case 0: return 16;
					case 1: return 16;
					default: return 0;
				}
			case VkFormat.R16G16Sscaled:
				switch (component)
				{
					case 0: return 16;
					case 1: return 16;
					default: return 0;
				}
			case VkFormat.R16G16Uint:
				switch (component)
				{
					case 0: return 16;
					case 1: return 16;
					default: return 0;
				}
			case VkFormat.R16G16Sint:
				switch (component)
				{
					case 0: return 16;
					case 1: return 16;
					default: return 0;
				}
			case VkFormat.R16G16Sfloat:
				switch (component)
				{
					case 0: return 16;
					case 1: return 16;
					default: return 0;
				}
			case VkFormat.R16G16B16Unorm:
				switch (component)
				{
					case 0: return 16;
					case 1: return 16;
					case 2: return 16;
					default: return 0;
				}
			case VkFormat.R16G16B16Snorm:
				switch (component)
				{
					case 0: return 16;
					case 1: return 16;
					case 2: return 16;
					default: return 0;
				}
			case VkFormat.R16G16B16Uscaled:
				switch (component)
				{
					case 0: return 16;
					case 1: return 16;
					case 2: return 16;
					default: return 0;
				}
			case VkFormat.R16G16B16Sscaled:
				switch (component)
				{
					case 0: return 16;
					case 1: return 16;
					case 2: return 16;
					default: return 0;
				}
			case VkFormat.R16G16B16Uint:
				switch (component)
				{
					case 0: return 16;
					case 1: return 16;
					case 2: return 16;
					default: return 0;
				}
			case VkFormat.R16G16B16Sint:
				switch (component)
				{
					case 0: return 16;
					case 1: return 16;
					case 2: return 16;
					default: return 0;
				}
			case VkFormat.R16G16B16Sfloat:
				switch (component)
				{
					case 0: return 16;
					case 1: return 16;
					case 2: return 16;
					default: return 0;
				}
			case VkFormat.R16G16B16A16Unorm:
				switch (component)
				{
					case 0: return 16;
					case 1: return 16;
					case 2: return 16;
					case 3: return 16;
					default: return 0;
				}
			case VkFormat.R16G16B16A16Snorm:
				switch (component)
				{
					case 0: return 16;
					case 1: return 16;
					case 2: return 16;
					case 3: return 16;
					default: return 0;
				}
			case VkFormat.R16G16B16A16Uscaled:
				switch (component)
				{
					case 0: return 16;
					case 1: return 16;
					case 2: return 16;
					case 3: return 16;
					default: return 0;
				}
			case VkFormat.R16G16B16A16Sscaled:
				switch (component)
				{
					case 0: return 16;
					case 1: return 16;
					case 2: return 16;
					case 3: return 16;
					default: return 0;
				}
			case VkFormat.R16G16B16A16Uint:
				switch (component)
				{
					case 0: return 16;
					case 1: return 16;
					case 2: return 16;
					case 3: return 16;
					default: return 0;
				}
			case VkFormat.R16G16B16A16Sint:
				switch (component)
				{
					case 0: return 16;
					case 1: return 16;
					case 2: return 16;
					case 3: return 16;
					default: return 0;
				}
			case VkFormat.R16G16B16A16Sfloat:
				switch (component)
				{
					case 0: return 16;
					case 1: return 16;
					case 2: return 16;
					case 3: return 16;
					default: return 0;
				}
			case VkFormat.R32Uint:
				switch (component)
				{
					case 0: return 32;
					default: return 0;
				}
			case VkFormat.R32Sint:
				switch (component)
				{
					case 0: return 32;
					default: return 0;
				}
			case VkFormat.R32Sfloat:
				switch (component)
				{
					case 0: return 32;
					default: return 0;
				}
			case VkFormat.R32G32Uint:
				switch (component)
				{
					case 0: return 32;
					case 1: return 32;
					default: return 0;
				}
			case VkFormat.R32G32Sint:
				switch (component)
				{
					case 0: return 32;
					case 1: return 32;
					default: return 0;
				}
			case VkFormat.R32G32Sfloat:
				switch (component)
				{
					case 0: return 32;
					case 1: return 32;
					default: return 0;
				}
			case VkFormat.R32G32B32Uint:
				switch (component)
				{
					case 0: return 32;
					case 1: return 32;
					case 2: return 32;
					default: return 0;
				}
			case VkFormat.R32G32B32Sint:
				switch (component)
				{
					case 0: return 32;
					case 1: return 32;
					case 2: return 32;
					default: return 0;
				}
			case VkFormat.R32G32B32Sfloat:
				switch (component)
				{
					case 0: return 32;
					case 1: return 32;
					case 2: return 32;
					default: return 0;
				}
			case VkFormat.R32G32B32A32Uint:
				switch (component)
				{
					case 0: return 32;
					case 1: return 32;
					case 2: return 32;
					case 3: return 32;
					default: return 0;
				}
			case VkFormat.R32G32B32A32Sint:
				switch (component)
				{
					case 0: return 32;
					case 1: return 32;
					case 2: return 32;
					case 3: return 32;
					default: return 0;
				}
			case VkFormat.R32G32B32A32Sfloat:
				switch (component)
				{
					case 0: return 32;
					case 1: return 32;
					case 2: return 32;
					case 3: return 32;
					default: return 0;
				}
			case VkFormat.R64Uint:
				switch (component)
				{
					case 0: return 64;
					default: return 0;
				}
			case VkFormat.R64Sint:
				switch (component)
				{
					case 0: return 64;
					default: return 0;
				}
			case VkFormat.R64Sfloat:
				switch (component)
				{
					case 0: return 64;
					default: return 0;
				}
			case VkFormat.R64G64Uint:
				switch (component)
				{
					case 0: return 64;
					case 1: return 64;
					default: return 0;
				}
			case VkFormat.R64G64Sint:
				switch (component)
				{
					case 0: return 64;
					case 1: return 64;
					default: return 0;
				}
			case VkFormat.R64G64Sfloat:
				switch (component)
				{
					case 0: return 64;
					case 1: return 64;
					default: return 0;
				}
			case VkFormat.R64G64B64Uint:
				switch (component)
				{
					case 0: return 64;
					case 1: return 64;
					case 2: return 64;
					default: return 0;
				}
			case VkFormat.R64G64B64Sint:
				switch (component)
				{
					case 0: return 64;
					case 1: return 64;
					case 2: return 64;
					default: return 0;
				}
			case VkFormat.R64G64B64Sfloat:
				switch (component)
				{
					case 0: return 64;
					case 1: return 64;
					case 2: return 64;
					default: return 0;
				}
			case VkFormat.R64G64B64A64Uint:
				switch (component)
				{
					case 0: return 64;
					case 1: return 64;
					case 2: return 64;
					case 3: return 64;
					default: return 0;
				}
			case VkFormat.R64G64B64A64Sint:
				switch (component)
				{
					case 0: return 64;
					case 1: return 64;
					case 2: return 64;
					case 3: return 64;
					default: return 0;
				}
			case VkFormat.R64G64B64A64Sfloat:
				switch (component)
				{
					case 0: return 64;
					case 1: return 64;
					case 2: return 64;
					case 3: return 64;
					default: return 0;
				}
			case VkFormat.B10G11R11UfloatPack32:
				switch (component)
				{
					case 0: return 10;
					case 1: return 11;
					case 2: return 11;
					default: return 0;
				}
			case VkFormat.E5B9G9R9UfloatPack32:
				switch (component)
				{
					case 0: return 9;
					case 1: return 9;
					case 2: return 9;
					default: return 0;
				}
			case VkFormat.D16Unorm:
				switch (component)
				{
					case 0: return 16;
					default: return 0;
				}
			case VkFormat.X8D24UnormPack32:
				switch (component)
				{
					case 0: return 24;
					default: return 0;
				}
			case VkFormat.D32Sfloat:
				switch (component)
				{
					case 0: return 32;
					default: return 0;
				}
			case VkFormat.S8Uint:
				switch (component)
				{
					case 0: return 8;
					default: return 0;
				}
			case VkFormat.D16UnormS8Uint:
				switch (component)
				{
					case 0: return 16;
					case 1: return 8;
					default: return 0;
				}
			case VkFormat.D24UnormS8Uint:
				switch (component)
				{
					case 0: return 24;
					case 1: return 8;
					default: return 0;
				}
			case VkFormat.D32SfloatS8Uint:
				switch (component)
				{
					case 0: return 32;
					case 1: return 8;
					default: return 0;
				}
			case VkFormat.G8B8G8R8422Unorm:
				switch (component)
				{
					case 0: return 8;
					case 1: return 8;
					case 2: return 8;
					case 3: return 8;
					default: return 0;
				}
			case VkFormat.B8G8R8G8422Unorm:
				switch (component)
				{
					case 0: return 8;
					case 1: return 8;
					case 2: return 8;
					case 3: return 8;
					default: return 0;
				}
			case VkFormat.G8B8R83Plane420Unorm:
				switch (component)
				{
					case 0: return 8;
					case 1: return 8;
					case 2: return 8;
					default: return 0;
				}
			case VkFormat.G8B8R82Plane420Unorm:
				switch (component)
				{
					case 0: return 8;
					case 1: return 8;
					case 2: return 8;
					default: return 0;
				}
			case VkFormat.G8B8R83Plane422Unorm:
				switch (component)
				{
					case 0: return 8;
					case 1: return 8;
					case 2: return 8;
					default: return 0;
				}
			case VkFormat.G8B8R82Plane422Unorm:
				switch (component)
				{
					case 0: return 8;
					case 1: return 8;
					case 2: return 8;
					default: return 0;
				}
			case VkFormat.G8B8R83Plane444Unorm:
				switch (component)
				{
					case 0: return 8;
					case 1: return 8;
					case 2: return 8;
					default: return 0;
				}
			case VkFormat.R10X6UnormPack16:
				switch (component)
				{
					case 0: return 10;
					default: return 0;
				}
			case VkFormat.R10X6G10X6Unorm2Pack16:
				switch (component)
				{
					case 0: return 10;
					case 1: return 10;
					default: return 0;
				}
			case VkFormat.R10X6G10X6B10X6A10X6Unorm4Pack16:
				switch (component)
				{
					case 0: return 10;
					case 1: return 10;
					case 2: return 10;
					case 3: return 10;
					default: return 0;
				}
			case VkFormat.G10X6B10X6G10X6R10X6422Unorm4Pack16:
				switch (component)
				{
					case 0: return 10;
					case 1: return 10;
					case 2: return 10;
					case 3: return 10;
					default: return 0;
				}
			case VkFormat.B10X6G10X6R10X6G10X6422Unorm4Pack16:
				switch (component)
				{
					case 0: return 10;
					case 1: return 10;
					case 2: return 10;
					case 3: return 10;
					default: return 0;
				}
			case VkFormat.G10X6B10X6R10X63Plane420Unorm3Pack16:
				switch (component)
				{
					case 0: return 10;
					case 1: return 10;
					case 2: return 10;
					default: return 0;
				}
			case VkFormat.G10X6B10X6R10X62Plane420Unorm3Pack16:
				switch (component)
				{
					case 0: return 10;
					case 1: return 10;
					case 2: return 10;
					default: return 0;
				}
			case VkFormat.G10X6B10X6R10X63Plane422Unorm3Pack16:
				switch (component)
				{
					case 0: return 10;
					case 1: return 10;
					case 2: return 10;
					default: return 0;
				}
			case VkFormat.G10X6B10X6R10X62Plane422Unorm3Pack16:
				switch (component)
				{
					case 0: return 10;
					case 1: return 10;
					case 2: return 10;
					default: return 0;
				}
			case VkFormat.G10X6B10X6R10X63Plane444Unorm3Pack16:
				switch (component)
				{
					case 0: return 10;
					case 1: return 10;
					case 2: return 10;
					default: return 0;
				}
			case VkFormat.R12X4UnormPack16:
				switch (component)
				{
					case 0: return 12;
					default: return 0;
				}
			case VkFormat.R12X4G12X4Unorm2Pack16:
				switch (component)
				{
					case 0: return 12;
					case 1: return 12;
					default: return 0;
				}
			case VkFormat.R12X4G12X4B12X4A12X4Unorm4Pack16:
				switch (component)
				{
					case 0: return 12;
					case 1: return 12;
					case 2: return 12;
					case 3: return 12;
					default: return 0;
				}
			case VkFormat.G12X4B12X4G12X4R12X4422Unorm4Pack16:
				switch (component)
				{
					case 0: return 12;
					case 1: return 12;
					case 2: return 12;
					case 3: return 12;
					default: return 0;
				}
			case VkFormat.B12X4G12X4R12X4G12X4422Unorm4Pack16:
				switch (component)
				{
					case 0: return 12;
					case 1: return 12;
					case 2: return 12;
					case 3: return 12;
					default: return 0;
				}
			case VkFormat.G12X4B12X4R12X43Plane420Unorm3Pack16:
				switch (component)
				{
					case 0: return 12;
					case 1: return 12;
					case 2: return 12;
					default: return 0;
				}
			case VkFormat.G12X4B12X4R12X42Plane420Unorm3Pack16:
				switch (component)
				{
					case 0: return 12;
					case 1: return 12;
					case 2: return 12;
					default: return 0;
				}
			case VkFormat.G12X4B12X4R12X43Plane422Unorm3Pack16:
				switch (component)
				{
					case 0: return 12;
					case 1: return 12;
					case 2: return 12;
					default: return 0;
				}
			case VkFormat.G12X4B12X4R12X42Plane422Unorm3Pack16:
				switch (component)
				{
					case 0: return 12;
					case 1: return 12;
					case 2: return 12;
					default: return 0;
				}
			case VkFormat.G12X4B12X4R12X43Plane444Unorm3Pack16:
				switch (component)
				{
					case 0: return 12;
					case 1: return 12;
					case 2: return 12;
					default: return 0;
				}
			case VkFormat.G16B16G16R16422Unorm:
				switch (component)
				{
					case 0: return 16;
					case 1: return 16;
					case 2: return 16;
					case 3: return 16;
					default: return 0;
				}
			case VkFormat.B16G16R16G16422Unorm:
				switch (component)
				{
					case 0: return 16;
					case 1: return 16;
					case 2: return 16;
					case 3: return 16;
					default: return 0;
				}
			case VkFormat.G16B16R163Plane420Unorm:
				switch (component)
				{
					case 0: return 16;
					case 1: return 16;
					case 2: return 16;
					default: return 0;
				}
			case VkFormat.G16B16R162Plane420Unorm:
				switch (component)
				{
					case 0: return 16;
					case 1: return 16;
					case 2: return 16;
					default: return 0;
				}
			case VkFormat.G16B16R163Plane422Unorm:
				switch (component)
				{
					case 0: return 16;
					case 1: return 16;
					case 2: return 16;
					default: return 0;
				}
			case VkFormat.G16B16R162Plane422Unorm:
				switch (component)
				{
					case 0: return 16;
					case 1: return 16;
					case 2: return 16;
					default: return 0;
				}
			case VkFormat.G16B16R163Plane444Unorm:
				switch (component)
				{
					case 0: return 16;
					case 1: return 16;
					case 2: return 16;
					default: return 0;
				}
			case VkFormat.G8B8R82Plane444Unorm:
				switch (component)
				{
					case 0: return 8;
					case 1: return 8;
					case 2: return 8;
					default: return 0;
				}
			case VkFormat.G10X6B10X6R10X62Plane444Unorm3Pack16:
				switch (component)
				{
					case 0: return 10;
					case 1: return 10;
					case 2: return 10;
					default: return 0;
				}
			case VkFormat.G12X4B12X4R12X42Plane444Unorm3Pack16:
				switch (component)
				{
					case 0: return 12;
					case 1: return 12;
					case 2: return 12;
					default: return 0;
				}
			case VkFormat.G16B16R162Plane444Unorm:
				switch (component)
				{
					case 0: return 16;
					case 1: return 16;
					case 2: return 16;
					default: return 0;
				}
			case VkFormat.A4R4G4B4UnormPack16:
				switch (component)
				{
					case 0: return 4;
					case 1: return 4;
					case 2: return 4;
					case 3: return 4;
					default: return 0;
				}
			case VkFormat.A4B4G4R4UnormPack16:
				switch (component)
				{
					case 0: return 4;
					case 1: return 4;
					case 2: return 4;
					case 3: return 4;
					default: return 0;
				}
			case VkFormat.R16G16S105NV:
				switch (component)
				{
					case 0: return 16;
					case 1: return 16;
					default: return 0;
				}

			default: return 0;
		}
	}
	public static bool ComponentsAreCompressed(this VkFormat format)
	{
		switch(format)
		{
			case VkFormat.Bc1RgbUnormBlock:
			case VkFormat.Bc1RgbSrgbBlock:
			case VkFormat.Bc1RgbaUnormBlock:
			case VkFormat.Bc1RgbaSrgbBlock:
			case VkFormat.Bc2UnormBlock:
			case VkFormat.Bc2SrgbBlock:
			case VkFormat.Bc3UnormBlock:
			case VkFormat.Bc3SrgbBlock:
			case VkFormat.Bc4UnormBlock:
			case VkFormat.Bc4SnormBlock:
			case VkFormat.Bc5UnormBlock:
			case VkFormat.Bc5SnormBlock:
			case VkFormat.Bc6hUfloatBlock:
			case VkFormat.Bc6hSfloatBlock:
			case VkFormat.Bc7UnormBlock:
			case VkFormat.Bc7SrgbBlock:
			case VkFormat.Etc2R8G8B8UnormBlock:
			case VkFormat.Etc2R8G8B8SrgbBlock:
			case VkFormat.Etc2R8G8B8A1UnormBlock:
			case VkFormat.Etc2R8G8B8A1SrgbBlock:
			case VkFormat.Etc2R8G8B8A8UnormBlock:
			case VkFormat.Etc2R8G8B8A8SrgbBlock:
			case VkFormat.EacR11UnormBlock:
			case VkFormat.EacR11SnormBlock:
			case VkFormat.EacR11G11UnormBlock:
			case VkFormat.EacR11G11SnormBlock:
			case VkFormat.Astc4x4UnormBlock:
			case VkFormat.Astc4x4SrgbBlock:
			case VkFormat.Astc5x4UnormBlock:
			case VkFormat.Astc5x4SrgbBlock:
			case VkFormat.Astc5x5UnormBlock:
			case VkFormat.Astc5x5SrgbBlock:
			case VkFormat.Astc6x5UnormBlock:
			case VkFormat.Astc6x5SrgbBlock:
			case VkFormat.Astc6x6UnormBlock:
			case VkFormat.Astc6x6SrgbBlock:
			case VkFormat.Astc8x5UnormBlock:
			case VkFormat.Astc8x5SrgbBlock:
			case VkFormat.Astc8x6UnormBlock:
			case VkFormat.Astc8x6SrgbBlock:
			case VkFormat.Astc8x8UnormBlock:
			case VkFormat.Astc8x8SrgbBlock:
			case VkFormat.Astc10x5UnormBlock:
			case VkFormat.Astc10x5SrgbBlock:
			case VkFormat.Astc10x6UnormBlock:
			case VkFormat.Astc10x6SrgbBlock:
			case VkFormat.Astc10x8UnormBlock:
			case VkFormat.Astc10x8SrgbBlock:
			case VkFormat.Astc10x10UnormBlock:
			case VkFormat.Astc10x10SrgbBlock:
			case VkFormat.Astc12x10UnormBlock:
			case VkFormat.Astc12x10SrgbBlock:
			case VkFormat.Astc12x12UnormBlock:
			case VkFormat.Astc12x12SrgbBlock:
			case VkFormat.PVRTC12BPPUnormBlockImg:
			case VkFormat.PVRTC14BPPUnormBlockImg:
			case VkFormat.PVRTC22BPPUnormBlockImg:
			case VkFormat.PVRTC24BPPUnormBlockImg:
			case VkFormat.PVRTC12BPPSrgbBlockImg:
			case VkFormat.PVRTC14BPPSrgbBlockImg:
			case VkFormat.PVRTC22BPPSrgbBlockImg:
			case VkFormat.PVRTC24BPPSrgbBlockImg:
			case VkFormat.Astc4x4SfloatBlock:
			case VkFormat.Astc5x4SfloatBlock:
			case VkFormat.Astc5x5SfloatBlock:
			case VkFormat.Astc6x5SfloatBlock:
			case VkFormat.Astc6x6SfloatBlock:
			case VkFormat.Astc8x5SfloatBlock:
			case VkFormat.Astc8x6SfloatBlock:
			case VkFormat.Astc8x8SfloatBlock:
			case VkFormat.Astc10x5SfloatBlock:
			case VkFormat.Astc10x6SfloatBlock:
			case VkFormat.Astc10x8SfloatBlock:
			case VkFormat.Astc10x10SfloatBlock:
			case VkFormat.Astc12x10SfloatBlock:
			case VkFormat.Astc12x12SfloatBlock:
				return true;

			default:
				return false;
		}
	}
	public static string CompressionScheme(this VkFormat format)
	{
		switch(format)
		{
			case VkFormat.Bc1RgbUnormBlock: return "BC";
			case VkFormat.Bc1RgbSrgbBlock: return "BC";
			case VkFormat.Bc1RgbaUnormBlock: return "BC";
			case VkFormat.Bc1RgbaSrgbBlock: return "BC";
			case VkFormat.Bc2UnormBlock: return "BC";
			case VkFormat.Bc2SrgbBlock: return "BC";
			case VkFormat.Bc3UnormBlock: return "BC";
			case VkFormat.Bc3SrgbBlock: return "BC";
			case VkFormat.Bc4UnormBlock: return "BC";
			case VkFormat.Bc4SnormBlock: return "BC";
			case VkFormat.Bc5UnormBlock: return "BC";
			case VkFormat.Bc5SnormBlock: return "BC";
			case VkFormat.Bc6hUfloatBlock: return "BC";
			case VkFormat.Bc6hSfloatBlock: return "BC";
			case VkFormat.Bc7UnormBlock: return "BC";
			case VkFormat.Bc7SrgbBlock: return "BC";
			case VkFormat.Etc2R8G8B8UnormBlock: return "ETC2";
			case VkFormat.Etc2R8G8B8SrgbBlock: return "ETC2";
			case VkFormat.Etc2R8G8B8A1UnormBlock: return "ETC2";
			case VkFormat.Etc2R8G8B8A1SrgbBlock: return "ETC2";
			case VkFormat.Etc2R8G8B8A8UnormBlock: return "ETC2";
			case VkFormat.Etc2R8G8B8A8SrgbBlock: return "ETC2";
			case VkFormat.EacR11UnormBlock: return "EAC";
			case VkFormat.EacR11SnormBlock: return "EAC";
			case VkFormat.EacR11G11UnormBlock: return "EAC";
			case VkFormat.EacR11G11SnormBlock: return "EAC";
			case VkFormat.Astc4x4UnormBlock: return "ASTC LDR";
			case VkFormat.Astc4x4SrgbBlock: return "ASTC LDR";
			case VkFormat.Astc5x4UnormBlock: return "ASTC LDR";
			case VkFormat.Astc5x4SrgbBlock: return "ASTC LDR";
			case VkFormat.Astc5x5UnormBlock: return "ASTC LDR";
			case VkFormat.Astc5x5SrgbBlock: return "ASTC LDR";
			case VkFormat.Astc6x5UnormBlock: return "ASTC LDR";
			case VkFormat.Astc6x5SrgbBlock: return "ASTC LDR";
			case VkFormat.Astc6x6UnormBlock: return "ASTC LDR";
			case VkFormat.Astc6x6SrgbBlock: return "ASTC LDR";
			case VkFormat.Astc8x5UnormBlock: return "ASTC LDR";
			case VkFormat.Astc8x5SrgbBlock: return "ASTC LDR";
			case VkFormat.Astc8x6UnormBlock: return "ASTC LDR";
			case VkFormat.Astc8x6SrgbBlock: return "ASTC LDR";
			case VkFormat.Astc8x8UnormBlock: return "ASTC LDR";
			case VkFormat.Astc8x8SrgbBlock: return "ASTC LDR";
			case VkFormat.Astc10x5UnormBlock: return "ASTC LDR";
			case VkFormat.Astc10x5SrgbBlock: return "ASTC LDR";
			case VkFormat.Astc10x6UnormBlock: return "ASTC LDR";
			case VkFormat.Astc10x6SrgbBlock: return "ASTC LDR";
			case VkFormat.Astc10x8UnormBlock: return "ASTC LDR";
			case VkFormat.Astc10x8SrgbBlock: return "ASTC LDR";
			case VkFormat.Astc10x10UnormBlock: return "ASTC LDR";
			case VkFormat.Astc10x10SrgbBlock: return "ASTC LDR";
			case VkFormat.Astc12x10UnormBlock: return "ASTC LDR";
			case VkFormat.Astc12x10SrgbBlock: return "ASTC LDR";
			case VkFormat.Astc12x12UnormBlock: return "ASTC LDR";
			case VkFormat.Astc12x12SrgbBlock: return "ASTC LDR";
			case VkFormat.PVRTC12BPPUnormBlockImg: return "PVRTC";
			case VkFormat.PVRTC14BPPUnormBlockImg: return "PVRTC";
			case VkFormat.PVRTC22BPPUnormBlockImg: return "PVRTC";
			case VkFormat.PVRTC24BPPUnormBlockImg: return "PVRTC";
			case VkFormat.PVRTC12BPPSrgbBlockImg: return "PVRTC";
			case VkFormat.PVRTC14BPPSrgbBlockImg: return "PVRTC";
			case VkFormat.PVRTC22BPPSrgbBlockImg: return "PVRTC";
			case VkFormat.PVRTC24BPPSrgbBlockImg: return "PVRTC";
			case VkFormat.Astc4x4SfloatBlock: return "ASTC HDR";
			case VkFormat.Astc5x4SfloatBlock: return "ASTC HDR";
			case VkFormat.Astc5x5SfloatBlock: return "ASTC HDR";
			case VkFormat.Astc6x5SfloatBlock: return "ASTC HDR";
			case VkFormat.Astc6x6SfloatBlock: return "ASTC HDR";
			case VkFormat.Astc8x5SfloatBlock: return "ASTC HDR";
			case VkFormat.Astc8x6SfloatBlock: return "ASTC HDR";
			case VkFormat.Astc8x8SfloatBlock: return "ASTC HDR";
			case VkFormat.Astc10x5SfloatBlock: return "ASTC HDR";
			case VkFormat.Astc10x6SfloatBlock: return "ASTC HDR";
			case VkFormat.Astc10x8SfloatBlock: return "ASTC HDR";
			case VkFormat.Astc10x10SfloatBlock: return "ASTC HDR";
			case VkFormat.Astc12x10SfloatBlock: return "ASTC HDR";
			case VkFormat.Astc12x12SfloatBlock: return "ASTC HDR";

			default:
				return string.Empty;
		}
	}
	public static byte Packed(this VkFormat format)
	{
		switch(format)
		{
			case VkFormat.R4G4UnormPack8: return 8;
			case VkFormat.R4G4B4A4UnormPack16: return 16;
			case VkFormat.B4G4R4A4UnormPack16: return 16;
			case VkFormat.R5G6B5UnormPack16: return 16;
			case VkFormat.B5G6R5UnormPack16: return 16;
			case VkFormat.R5G5B5A1UnormPack16: return 16;
			case VkFormat.B5G5R5A1UnormPack16: return 16;
			case VkFormat.A1R5G5B5UnormPack16: return 16;
			case VkFormat.R8Unorm: return 0;
			case VkFormat.R8Snorm: return 0;
			case VkFormat.R8Uscaled: return 0;
			case VkFormat.R8Sscaled: return 0;
			case VkFormat.R8Uint: return 0;
			case VkFormat.R8Sint: return 0;
			case VkFormat.R8Srgb: return 0;
			case VkFormat.R8G8Unorm: return 0;
			case VkFormat.R8G8Snorm: return 0;
			case VkFormat.R8G8Uscaled: return 0;
			case VkFormat.R8G8Sscaled: return 0;
			case VkFormat.R8G8Uint: return 0;
			case VkFormat.R8G8Sint: return 0;
			case VkFormat.R8G8Srgb: return 0;
			case VkFormat.R8G8B8Unorm: return 0;
			case VkFormat.R8G8B8Snorm: return 0;
			case VkFormat.R8G8B8Uscaled: return 0;
			case VkFormat.R8G8B8Sscaled: return 0;
			case VkFormat.R8G8B8Uint: return 0;
			case VkFormat.R8G8B8Sint: return 0;
			case VkFormat.R8G8B8Srgb: return 0;
			case VkFormat.B8G8R8Unorm: return 0;
			case VkFormat.B8G8R8Snorm: return 0;
			case VkFormat.B8G8R8Uscaled: return 0;
			case VkFormat.B8G8R8Sscaled: return 0;
			case VkFormat.B8G8R8Uint: return 0;
			case VkFormat.B8G8R8Sint: return 0;
			case VkFormat.B8G8R8Srgb: return 0;
			case VkFormat.R8G8B8A8Unorm: return 0;
			case VkFormat.R8G8B8A8Snorm: return 0;
			case VkFormat.R8G8B8A8Uscaled: return 0;
			case VkFormat.R8G8B8A8Sscaled: return 0;
			case VkFormat.R8G8B8A8Uint: return 0;
			case VkFormat.R8G8B8A8Sint: return 0;
			case VkFormat.R8G8B8A8Srgb: return 0;
			case VkFormat.B8G8R8A8Unorm: return 0;
			case VkFormat.B8G8R8A8Snorm: return 0;
			case VkFormat.B8G8R8A8Uscaled: return 0;
			case VkFormat.B8G8R8A8Sscaled: return 0;
			case VkFormat.B8G8R8A8Uint: return 0;
			case VkFormat.B8G8R8A8Sint: return 0;
			case VkFormat.B8G8R8A8Srgb: return 0;
			case VkFormat.A8B8G8R8UnormPack32: return 32;
			case VkFormat.A8B8G8R8SnormPack32: return 32;
			case VkFormat.A8B8G8R8UscaledPack32: return 32;
			case VkFormat.A8B8G8R8SscaledPack32: return 32;
			case VkFormat.A8B8G8R8UintPack32: return 32;
			case VkFormat.A8B8G8R8SintPack32: return 32;
			case VkFormat.A8B8G8R8SrgbPack32: return 32;
			case VkFormat.A2R10G10B10UnormPack32: return 32;
			case VkFormat.A2R10G10B10SnormPack32: return 32;
			case VkFormat.A2R10G10B10UscaledPack32: return 32;
			case VkFormat.A2R10G10B10SscaledPack32: return 32;
			case VkFormat.A2R10G10B10UintPack32: return 32;
			case VkFormat.A2R10G10B10SintPack32: return 32;
			case VkFormat.A2B10G10R10UnormPack32: return 32;
			case VkFormat.A2B10G10R10SnormPack32: return 32;
			case VkFormat.A2B10G10R10UscaledPack32: return 32;
			case VkFormat.A2B10G10R10SscaledPack32: return 32;
			case VkFormat.A2B10G10R10UintPack32: return 32;
			case VkFormat.A2B10G10R10SintPack32: return 32;
			case VkFormat.R16Unorm: return 0;
			case VkFormat.R16Snorm: return 0;
			case VkFormat.R16Uscaled: return 0;
			case VkFormat.R16Sscaled: return 0;
			case VkFormat.R16Uint: return 0;
			case VkFormat.R16Sint: return 0;
			case VkFormat.R16Sfloat: return 0;
			case VkFormat.R16G16Unorm: return 0;
			case VkFormat.R16G16Snorm: return 0;
			case VkFormat.R16G16Uscaled: return 0;
			case VkFormat.R16G16Sscaled: return 0;
			case VkFormat.R16G16Uint: return 0;
			case VkFormat.R16G16Sint: return 0;
			case VkFormat.R16G16Sfloat: return 0;
			case VkFormat.R16G16B16Unorm: return 0;
			case VkFormat.R16G16B16Snorm: return 0;
			case VkFormat.R16G16B16Uscaled: return 0;
			case VkFormat.R16G16B16Sscaled: return 0;
			case VkFormat.R16G16B16Uint: return 0;
			case VkFormat.R16G16B16Sint: return 0;
			case VkFormat.R16G16B16Sfloat: return 0;
			case VkFormat.R16G16B16A16Unorm: return 0;
			case VkFormat.R16G16B16A16Snorm: return 0;
			case VkFormat.R16G16B16A16Uscaled: return 0;
			case VkFormat.R16G16B16A16Sscaled: return 0;
			case VkFormat.R16G16B16A16Uint: return 0;
			case VkFormat.R16G16B16A16Sint: return 0;
			case VkFormat.R16G16B16A16Sfloat: return 0;
			case VkFormat.R32Uint: return 0;
			case VkFormat.R32Sint: return 0;
			case VkFormat.R32Sfloat: return 0;
			case VkFormat.R32G32Uint: return 0;
			case VkFormat.R32G32Sint: return 0;
			case VkFormat.R32G32Sfloat: return 0;
			case VkFormat.R32G32B32Uint: return 0;
			case VkFormat.R32G32B32Sint: return 0;
			case VkFormat.R32G32B32Sfloat: return 0;
			case VkFormat.R32G32B32A32Uint: return 0;
			case VkFormat.R32G32B32A32Sint: return 0;
			case VkFormat.R32G32B32A32Sfloat: return 0;
			case VkFormat.R64Uint: return 0;
			case VkFormat.R64Sint: return 0;
			case VkFormat.R64Sfloat: return 0;
			case VkFormat.R64G64Uint: return 0;
			case VkFormat.R64G64Sint: return 0;
			case VkFormat.R64G64Sfloat: return 0;
			case VkFormat.R64G64B64Uint: return 0;
			case VkFormat.R64G64B64Sint: return 0;
			case VkFormat.R64G64B64Sfloat: return 0;
			case VkFormat.R64G64B64A64Uint: return 0;
			case VkFormat.R64G64B64A64Sint: return 0;
			case VkFormat.R64G64B64A64Sfloat: return 0;
			case VkFormat.B10G11R11UfloatPack32: return 32;
			case VkFormat.E5B9G9R9UfloatPack32: return 32;
			case VkFormat.D16Unorm: return 0;
			case VkFormat.X8D24UnormPack32: return 32;
			case VkFormat.D32Sfloat: return 0;
			case VkFormat.S8Uint: return 0;
			case VkFormat.D16UnormS8Uint: return 0;
			case VkFormat.D24UnormS8Uint: return 0;
			case VkFormat.D32SfloatS8Uint: return 0;
			case VkFormat.Bc1RgbUnormBlock: return 0;
			case VkFormat.Bc1RgbSrgbBlock: return 0;
			case VkFormat.Bc1RgbaUnormBlock: return 0;
			case VkFormat.Bc1RgbaSrgbBlock: return 0;
			case VkFormat.Bc2UnormBlock: return 0;
			case VkFormat.Bc2SrgbBlock: return 0;
			case VkFormat.Bc3UnormBlock: return 0;
			case VkFormat.Bc3SrgbBlock: return 0;
			case VkFormat.Bc4UnormBlock: return 0;
			case VkFormat.Bc4SnormBlock: return 0;
			case VkFormat.Bc5UnormBlock: return 0;
			case VkFormat.Bc5SnormBlock: return 0;
			case VkFormat.Bc6hUfloatBlock: return 0;
			case VkFormat.Bc6hSfloatBlock: return 0;
			case VkFormat.Bc7UnormBlock: return 0;
			case VkFormat.Bc7SrgbBlock: return 0;
			case VkFormat.Etc2R8G8B8UnormBlock: return 0;
			case VkFormat.Etc2R8G8B8SrgbBlock: return 0;
			case VkFormat.Etc2R8G8B8A1UnormBlock: return 0;
			case VkFormat.Etc2R8G8B8A1SrgbBlock: return 0;
			case VkFormat.Etc2R8G8B8A8UnormBlock: return 0;
			case VkFormat.Etc2R8G8B8A8SrgbBlock: return 0;
			case VkFormat.EacR11UnormBlock: return 0;
			case VkFormat.EacR11SnormBlock: return 0;
			case VkFormat.EacR11G11UnormBlock: return 0;
			case VkFormat.EacR11G11SnormBlock: return 0;
			case VkFormat.Astc4x4UnormBlock: return 0;
			case VkFormat.Astc4x4SrgbBlock: return 0;
			case VkFormat.Astc5x4UnormBlock: return 0;
			case VkFormat.Astc5x4SrgbBlock: return 0;
			case VkFormat.Astc5x5UnormBlock: return 0;
			case VkFormat.Astc5x5SrgbBlock: return 0;
			case VkFormat.Astc6x5UnormBlock: return 0;
			case VkFormat.Astc6x5SrgbBlock: return 0;
			case VkFormat.Astc6x6UnormBlock: return 0;
			case VkFormat.Astc6x6SrgbBlock: return 0;
			case VkFormat.Astc8x5UnormBlock: return 0;
			case VkFormat.Astc8x5SrgbBlock: return 0;
			case VkFormat.Astc8x6UnormBlock: return 0;
			case VkFormat.Astc8x6SrgbBlock: return 0;
			case VkFormat.Astc8x8UnormBlock: return 0;
			case VkFormat.Astc8x8SrgbBlock: return 0;
			case VkFormat.Astc10x5UnormBlock: return 0;
			case VkFormat.Astc10x5SrgbBlock: return 0;
			case VkFormat.Astc10x6UnormBlock: return 0;
			case VkFormat.Astc10x6SrgbBlock: return 0;
			case VkFormat.Astc10x8UnormBlock: return 0;
			case VkFormat.Astc10x8SrgbBlock: return 0;
			case VkFormat.Astc10x10UnormBlock: return 0;
			case VkFormat.Astc10x10SrgbBlock: return 0;
			case VkFormat.Astc12x10UnormBlock: return 0;
			case VkFormat.Astc12x10SrgbBlock: return 0;
			case VkFormat.Astc12x12UnormBlock: return 0;
			case VkFormat.Astc12x12SrgbBlock: return 0;
			case VkFormat.G8B8G8R8422Unorm: return 0;
			case VkFormat.B8G8R8G8422Unorm: return 0;
			case VkFormat.G8B8R83Plane420Unorm: return 0;
			case VkFormat.G8B8R82Plane420Unorm: return 0;
			case VkFormat.G8B8R83Plane422Unorm: return 0;
			case VkFormat.G8B8R82Plane422Unorm: return 0;
			case VkFormat.G8B8R83Plane444Unorm: return 0;
			case VkFormat.R10X6UnormPack16: return 16;
			case VkFormat.R10X6G10X6Unorm2Pack16: return 16;
			case VkFormat.R10X6G10X6B10X6A10X6Unorm4Pack16: return 16;
			case VkFormat.G10X6B10X6G10X6R10X6422Unorm4Pack16: return 16;
			case VkFormat.B10X6G10X6R10X6G10X6422Unorm4Pack16: return 16;
			case VkFormat.G10X6B10X6R10X63Plane420Unorm3Pack16: return 16;
			case VkFormat.G10X6B10X6R10X62Plane420Unorm3Pack16: return 16;
			case VkFormat.G10X6B10X6R10X63Plane422Unorm3Pack16: return 16;
			case VkFormat.G10X6B10X6R10X62Plane422Unorm3Pack16: return 16;
			case VkFormat.G10X6B10X6R10X63Plane444Unorm3Pack16: return 16;
			case VkFormat.R12X4UnormPack16: return 16;
			case VkFormat.R12X4G12X4Unorm2Pack16: return 16;
			case VkFormat.R12X4G12X4B12X4A12X4Unorm4Pack16: return 16;
			case VkFormat.G12X4B12X4G12X4R12X4422Unorm4Pack16: return 16;
			case VkFormat.B12X4G12X4R12X4G12X4422Unorm4Pack16: return 16;
			case VkFormat.G12X4B12X4R12X43Plane420Unorm3Pack16: return 16;
			case VkFormat.G12X4B12X4R12X42Plane420Unorm3Pack16: return 16;
			case VkFormat.G12X4B12X4R12X43Plane422Unorm3Pack16: return 16;
			case VkFormat.G12X4B12X4R12X42Plane422Unorm3Pack16: return 16;
			case VkFormat.G12X4B12X4R12X43Plane444Unorm3Pack16: return 16;
			case VkFormat.G16B16G16R16422Unorm: return 0;
			case VkFormat.B16G16R16G16422Unorm: return 0;
			case VkFormat.G16B16R163Plane420Unorm: return 0;
			case VkFormat.G16B16R162Plane420Unorm: return 0;
			case VkFormat.G16B16R163Plane422Unorm: return 0;
			case VkFormat.G16B16R162Plane422Unorm: return 0;
			case VkFormat.G16B16R163Plane444Unorm: return 0;
			case VkFormat.PVRTC12BPPUnormBlockImg: return 0;
			case VkFormat.PVRTC14BPPUnormBlockImg: return 0;
			case VkFormat.PVRTC22BPPUnormBlockImg: return 0;
			case VkFormat.PVRTC24BPPUnormBlockImg: return 0;
			case VkFormat.PVRTC12BPPSrgbBlockImg: return 0;
			case VkFormat.PVRTC14BPPSrgbBlockImg: return 0;
			case VkFormat.PVRTC22BPPSrgbBlockImg: return 0;
			case VkFormat.PVRTC24BPPSrgbBlockImg: return 0;
			case VkFormat.Astc4x4SfloatBlock: return 0;
			case VkFormat.Astc5x4SfloatBlock: return 0;
			case VkFormat.Astc5x5SfloatBlock: return 0;
			case VkFormat.Astc6x5SfloatBlock: return 0;
			case VkFormat.Astc6x6SfloatBlock: return 0;
			case VkFormat.Astc8x5SfloatBlock: return 0;
			case VkFormat.Astc8x6SfloatBlock: return 0;
			case VkFormat.Astc8x8SfloatBlock: return 0;
			case VkFormat.Astc10x5SfloatBlock: return 0;
			case VkFormat.Astc10x6SfloatBlock: return 0;
			case VkFormat.Astc10x8SfloatBlock: return 0;
			case VkFormat.Astc10x10SfloatBlock: return 0;
			case VkFormat.Astc12x10SfloatBlock: return 0;
			case VkFormat.Astc12x12SfloatBlock: return 0;
			case VkFormat.G8B8R82Plane444Unorm: return 0;
			case VkFormat.G10X6B10X6R10X62Plane444Unorm3Pack16: return 16;
			case VkFormat.G12X4B12X4R12X42Plane444Unorm3Pack16: return 16;
			case VkFormat.G16B16R162Plane444Unorm: return 0;
			case VkFormat.A4R4G4B4UnormPack16: return 16;
			case VkFormat.A4B4G4R4UnormPack16: return 16;
			case VkFormat.R16G16S105NV: return 0;

			default: return 0;
		}
	}
	public static VkFormat PlaneCompatibleFormat(this VkFormat format, int plane)
	{
		switch (format)
		{
			case VkFormat.G8B8R83Plane420Unorm:
				switch (plane)
				{
					case 0: return VkFormat.R8Unorm;
					case 1: return VkFormat.R8Unorm;
					case 2: return VkFormat.R8Unorm;
					default: return 0;
				}
			case VkFormat.G8B8R82Plane420Unorm:
				switch (plane)
				{
					case 0: return VkFormat.R8Unorm;
					case 1: return VkFormat.R8G8Unorm;
					default: return 0;
				}
			case VkFormat.G8B8R83Plane422Unorm:
				switch (plane)
				{
					case 0: return VkFormat.R8Unorm;
					case 1: return VkFormat.R8Unorm;
					case 2: return VkFormat.R8Unorm;
					default: return 0;
				}
			case VkFormat.G8B8R82Plane422Unorm:
				switch (plane)
				{
					case 0: return VkFormat.R8Unorm;
					case 1: return VkFormat.R8G8Unorm;
					default: return 0;
				}
			case VkFormat.G8B8R83Plane444Unorm:
				switch (plane)
				{
					case 0: return VkFormat.R8Unorm;
					case 1: return VkFormat.R8Unorm;
					case 2: return VkFormat.R8Unorm;
					default: return 0;
				}
			case VkFormat.G10X6B10X6R10X63Plane420Unorm3Pack16:
				switch (plane)
				{
					case 0: return VkFormat.R10X6UnormPack16;
					case 1: return VkFormat.R10X6UnormPack16;
					case 2: return VkFormat.R10X6UnormPack16;
					default: return 0;
				}
			case VkFormat.G10X6B10X6R10X62Plane420Unorm3Pack16:
				switch (plane)
				{
					case 0: return VkFormat.R10X6UnormPack16;
					case 1: return VkFormat.R10X6G10X6Unorm2Pack16;
					default: return 0;
				}
			case VkFormat.G10X6B10X6R10X63Plane422Unorm3Pack16:
				switch (plane)
				{
					case 0: return VkFormat.R10X6UnormPack16;
					case 1: return VkFormat.R10X6UnormPack16;
					case 2: return VkFormat.R10X6UnormPack16;
					default: return 0;
				}
			case VkFormat.G10X6B10X6R10X62Plane422Unorm3Pack16:
				switch (plane)
				{
					case 0: return VkFormat.R10X6UnormPack16;
					case 1: return VkFormat.R10X6G10X6Unorm2Pack16;
					default: return 0;
				}
			case VkFormat.G10X6B10X6R10X63Plane444Unorm3Pack16:
				switch (plane)
				{
					case 0: return VkFormat.R10X6UnormPack16;
					case 1: return VkFormat.R10X6UnormPack16;
					case 2: return VkFormat.R10X6UnormPack16;
					default: return 0;
				}
			case VkFormat.G12X4B12X4R12X43Plane420Unorm3Pack16:
				switch (plane)
				{
					case 0: return VkFormat.R12X4UnormPack16;
					case 1: return VkFormat.R12X4UnormPack16;
					case 2: return VkFormat.R12X4UnormPack16;
					default: return 0;
				}
			case VkFormat.G12X4B12X4R12X42Plane420Unorm3Pack16:
				switch (plane)
				{
					case 0: return VkFormat.R12X4UnormPack16;
					case 1: return VkFormat.R12X4G12X4Unorm2Pack16;
					default: return 0;
				}
			case VkFormat.G12X4B12X4R12X43Plane422Unorm3Pack16:
				switch (plane)
				{
					case 0: return VkFormat.R12X4UnormPack16;
					case 1: return VkFormat.R12X4UnormPack16;
					case 2: return VkFormat.R12X4UnormPack16;
					default: return 0;
				}
			case VkFormat.G12X4B12X4R12X42Plane422Unorm3Pack16:
				switch (plane)
				{
					case 0: return VkFormat.R12X4UnormPack16;
					case 1: return VkFormat.R12X4G12X4Unorm2Pack16;
					default: return 0;
				}
			case VkFormat.G12X4B12X4R12X43Plane444Unorm3Pack16:
				switch (plane)
				{
					case 0: return VkFormat.R12X4UnormPack16;
					case 1: return VkFormat.R12X4UnormPack16;
					case 2: return VkFormat.R12X4UnormPack16;
					default: return 0;
				}
			case VkFormat.G16B16R163Plane420Unorm:
				switch (plane)
				{
					case 0: return VkFormat.R16Unorm;
					case 1: return VkFormat.R16Unorm;
					case 2: return VkFormat.R16Unorm;
					default: return 0;
				}
			case VkFormat.G16B16R162Plane420Unorm:
				switch (plane)
				{
					case 0: return VkFormat.R16Unorm;
					case 1: return VkFormat.R16G16Unorm;
					default: return 0;
				}
			case VkFormat.G16B16R163Plane422Unorm:
				switch (plane)
				{
					case 0: return VkFormat.R16Unorm;
					case 1: return VkFormat.R16Unorm;
					case 2: return VkFormat.R16Unorm;
					default: return 0;
				}
			case VkFormat.G16B16R162Plane422Unorm:
				switch (plane)
				{
					case 0: return VkFormat.R16Unorm;
					case 1: return VkFormat.R16G16Unorm;
					default: return 0;
				}
			case VkFormat.G16B16R163Plane444Unorm:
				switch (plane)
				{
					case 0: return VkFormat.R16Unorm;
					case 1: return VkFormat.R16Unorm;
					case 2: return VkFormat.R16Unorm;
					default: return 0;
				}
			case VkFormat.G8B8R82Plane444Unorm:
				switch (plane)
				{
					case 0: return VkFormat.R8Unorm;
					case 1: return VkFormat.R8G8Unorm;
					default: return 0;
				}
			case VkFormat.G10X6B10X6R10X62Plane444Unorm3Pack16:
				switch (plane)
				{
					case 0: return VkFormat.R10X6UnormPack16;
					case 1: return VkFormat.R10X6G10X6Unorm2Pack16;
					default: return 0;
				}
			case VkFormat.G12X4B12X4R12X42Plane444Unorm3Pack16:
				switch (plane)
				{
					case 0: return VkFormat.R12X4UnormPack16;
					case 1: return VkFormat.R12X4G12X4Unorm2Pack16;
					default: return 0;
				}
			case VkFormat.G16B16R162Plane444Unorm:
				switch (plane)
				{
					case 0: return VkFormat.R16Unorm;
					case 1: return VkFormat.R16G16Unorm;
					default: return 0;
				}

			default: return format;
		}
	}
	public static byte PlaneCount(this VkFormat format)
	{
		switch(format)
		{
			case VkFormat.G8B8R83Plane420Unorm: return 3;
			case VkFormat.G8B8R82Plane420Unorm: return 2;
			case VkFormat.G8B8R83Plane422Unorm: return 3;
			case VkFormat.G8B8R82Plane422Unorm: return 2;
			case VkFormat.G8B8R83Plane444Unorm: return 3;
			case VkFormat.G10X6B10X6R10X63Plane420Unorm3Pack16: return 3;
			case VkFormat.G10X6B10X6R10X62Plane420Unorm3Pack16: return 2;
			case VkFormat.G10X6B10X6R10X63Plane422Unorm3Pack16: return 3;
			case VkFormat.G10X6B10X6R10X62Plane422Unorm3Pack16: return 2;
			case VkFormat.G10X6B10X6R10X63Plane444Unorm3Pack16: return 3;
			case VkFormat.G12X4B12X4R12X43Plane420Unorm3Pack16: return 3;
			case VkFormat.G12X4B12X4R12X42Plane420Unorm3Pack16: return 2;
			case VkFormat.G12X4B12X4R12X43Plane422Unorm3Pack16: return 3;
			case VkFormat.G12X4B12X4R12X42Plane422Unorm3Pack16: return 2;
			case VkFormat.G12X4B12X4R12X43Plane444Unorm3Pack16: return 3;
			case VkFormat.G16B16R163Plane420Unorm: return 3;
			case VkFormat.G16B16R162Plane420Unorm: return 2;
			case VkFormat.G16B16R163Plane422Unorm: return 3;
			case VkFormat.G16B16R162Plane422Unorm: return 2;
			case VkFormat.G16B16R163Plane444Unorm: return 3;
			case VkFormat.G8B8R82Plane444Unorm: return 2;
			case VkFormat.G10X6B10X6R10X62Plane444Unorm3Pack16: return 2;
			case VkFormat.G12X4B12X4R12X42Plane444Unorm3Pack16: return 2;
			case VkFormat.G16B16R162Plane444Unorm: return 2;

			default: return 1;
		}
	}
	public static byte PlaneWidthDivisor(this VkFormat format, int plane)
	{
		switch(format)
		{
			case VkFormat.G8B8R83Plane420Unorm:
				switch (plane)
				{
					case 0: return 1;
					case 1: return 2;
					case 2: return 2;
					default: return 1;
				}
			case VkFormat.G8B8R82Plane420Unorm:
				switch (plane)
				{
					case 0: return 1;
					case 1: return 2;
					default: return 1;
				}
			case VkFormat.G8B8R83Plane422Unorm:
				switch (plane)
				{
					case 0: return 1;
					case 1: return 2;
					case 2: return 2;
					default: return 1;
				}
			case VkFormat.G8B8R82Plane422Unorm:
				switch (plane)
				{
					case 0: return 1;
					case 1: return 2;
					default: return 1;
				}
			case VkFormat.G8B8R83Plane444Unorm:
				switch (plane)
				{
					case 0: return 1;
					case 1: return 1;
					case 2: return 1;
					default: return 1;
				}
			case VkFormat.G10X6B10X6R10X63Plane420Unorm3Pack16:
				switch (plane)
				{
					case 0: return 1;
					case 1: return 2;
					case 2: return 2;
					default: return 1;
				}
			case VkFormat.G10X6B10X6R10X62Plane420Unorm3Pack16:
				switch (plane)
				{
					case 0: return 1;
					case 1: return 2;
					default: return 1;
				}
			case VkFormat.G10X6B10X6R10X63Plane422Unorm3Pack16:
				switch (plane)
				{
					case 0: return 1;
					case 1: return 2;
					case 2: return 2;
					default: return 1;
				}
			case VkFormat.G10X6B10X6R10X62Plane422Unorm3Pack16:
				switch (plane)
				{
					case 0: return 1;
					case 1: return 2;
					default: return 1;
				}
			case VkFormat.G10X6B10X6R10X63Plane444Unorm3Pack16:
				switch (plane)
				{
					case 0: return 1;
					case 1: return 1;
					case 2: return 1;
					default: return 1;
				}
			case VkFormat.G12X4B12X4R12X43Plane420Unorm3Pack16:
				switch (plane)
				{
					case 0: return 1;
					case 1: return 2;
					case 2: return 2;
					default: return 1;
				}
			case VkFormat.G12X4B12X4R12X42Plane420Unorm3Pack16:
				switch (plane)
				{
					case 0: return 1;
					case 1: return 2;
					default: return 1;
				}
			case VkFormat.G12X4B12X4R12X43Plane422Unorm3Pack16:
				switch (plane)
				{
					case 0: return 1;
					case 1: return 2;
					case 2: return 2;
					default: return 1;
				}
			case VkFormat.G12X4B12X4R12X42Plane422Unorm3Pack16:
				switch (plane)
				{
					case 0: return 1;
					case 1: return 2;
					default: return 1;
				}
			case VkFormat.G12X4B12X4R12X43Plane444Unorm3Pack16:
				switch (plane)
				{
					case 0: return 1;
					case 1: return 1;
					case 2: return 1;
					default: return 1;
				}
			case VkFormat.G16B16R163Plane420Unorm:
				switch (plane)
				{
					case 0: return 1;
					case 1: return 2;
					case 2: return 2;
					default: return 1;
				}
			case VkFormat.G16B16R162Plane420Unorm:
				switch (plane)
				{
					case 0: return 1;
					case 1: return 2;
					default: return 1;
				}
			case VkFormat.G16B16R163Plane422Unorm:
				switch (plane)
				{
					case 0: return 1;
					case 1: return 2;
					case 2: return 2;
					default: return 1;
				}
			case VkFormat.G16B16R162Plane422Unorm:
				switch (plane)
				{
					case 0: return 1;
					case 1: return 2;
					default: return 1;
				}
			case VkFormat.G16B16R163Plane444Unorm:
				switch (plane)
				{
					case 0: return 1;
					case 1: return 1;
					case 2: return 1;
					default: return 1;
				}
			case VkFormat.G8B8R82Plane444Unorm:
				switch (plane)
				{
					case 0: return 1;
					case 1: return 1;
					default: return 1;
				}
			case VkFormat.G10X6B10X6R10X62Plane444Unorm3Pack16:
				switch (plane)
				{
					case 0: return 1;
					case 1: return 1;
					default: return 1;
				}
			case VkFormat.G12X4B12X4R12X42Plane444Unorm3Pack16:
				switch (plane)
				{
					case 0: return 1;
					case 1: return 1;
					default: return 1;
				}
			case VkFormat.G16B16R162Plane444Unorm:
				switch (plane)
				{
					case 0: return 1;
					case 1: return 1;
					default: return 1;
				}

			default: return 1;
		}
	}
	public static byte PlaneHeightDivisor(this VkFormat format, int plane)
	{
		switch(format)
		{
			case VkFormat.G8B8R83Plane420Unorm:
				switch (plane)
				{
					case 0: return 1;
					case 1: return 2;
					case 2: return 2;
					default: return 1;
				}
			case VkFormat.G8B8R82Plane420Unorm:
				switch (plane)
				{
					case 0: return 1;
					case 1: return 2;
					default: return 1;
				}
			case VkFormat.G8B8R83Plane422Unorm:
				switch (plane)
				{
					case 0: return 1;
					case 1: return 1;
					case 2: return 1;
					default: return 1;
				}
			case VkFormat.G8B8R82Plane422Unorm:
				switch (plane)
				{
					case 0: return 1;
					case 1: return 1;
					default: return 1;
				}
			case VkFormat.G8B8R83Plane444Unorm:
				switch (plane)
				{
					case 0: return 1;
					case 1: return 1;
					case 2: return 1;
					default: return 1;
				}
			case VkFormat.G10X6B10X6R10X63Plane420Unorm3Pack16:
				switch (plane)
				{
					case 0: return 1;
					case 1: return 2;
					case 2: return 2;
					default: return 1;
				}
			case VkFormat.G10X6B10X6R10X62Plane420Unorm3Pack16:
				switch (plane)
				{
					case 0: return 1;
					case 1: return 2;
					default: return 1;
				}
			case VkFormat.G10X6B10X6R10X63Plane422Unorm3Pack16:
				switch (plane)
				{
					case 0: return 1;
					case 1: return 1;
					case 2: return 1;
					default: return 1;
				}
			case VkFormat.G10X6B10X6R10X62Plane422Unorm3Pack16:
				switch (plane)
				{
					case 0: return 1;
					case 1: return 1;
					default: return 1;
				}
			case VkFormat.G10X6B10X6R10X63Plane444Unorm3Pack16:
				switch (plane)
				{
					case 0: return 1;
					case 1: return 1;
					case 2: return 1;
					default: return 1;
				}
			case VkFormat.G12X4B12X4R12X43Plane420Unorm3Pack16:
				switch (plane)
				{
					case 0: return 1;
					case 1: return 2;
					case 2: return 2;
					default: return 1;
				}
			case VkFormat.G12X4B12X4R12X42Plane420Unorm3Pack16:
				switch (plane)
				{
					case 0: return 1;
					case 1: return 2;
					default: return 1;
				}
			case VkFormat.G12X4B12X4R12X43Plane422Unorm3Pack16:
				switch (plane)
				{
					case 0: return 1;
					case 1: return 1;
					case 2: return 1;
					default: return 1;
				}
			case VkFormat.G12X4B12X4R12X42Plane422Unorm3Pack16:
				switch (plane)
				{
					case 0: return 1;
					case 1: return 1;
					default: return 1;
				}
			case VkFormat.G12X4B12X4R12X43Plane444Unorm3Pack16:
				switch (plane)
				{
					case 0: return 1;
					case 1: return 1;
					case 2: return 1;
					default: return 1;
				}
			case VkFormat.G16B16R163Plane420Unorm:
				switch (plane)
				{
					case 0: return 1;
					case 1: return 2;
					case 2: return 2;
					default: return 1;
				}
			case VkFormat.G16B16R162Plane420Unorm:
				switch (plane)
				{
					case 0: return 1;
					case 1: return 2;
					default: return 1;
				}
			case VkFormat.G16B16R163Plane422Unorm:
				switch (plane)
				{
					case 0: return 1;
					case 1: return 1;
					case 2: return 1;
					default: return 1;
				}
			case VkFormat.G16B16R162Plane422Unorm:
				switch (plane)
				{
					case 0: return 1;
					case 1: return 1;
					default: return 1;
				}
			case VkFormat.G16B16R163Plane444Unorm:
				switch (plane)
				{
					case 0: return 1;
					case 1: return 1;
					case 2: return 1;
					default: return 1;
				}
			case VkFormat.G8B8R82Plane444Unorm:
				switch (plane)
				{
					case 0: return 1;
					case 1: return 1;
					default: return 1;
				}
			case VkFormat.G10X6B10X6R10X62Plane444Unorm3Pack16:
				switch (plane)
				{
					case 0: return 1;
					case 1: return 1;
					default: return 1;
				}
			case VkFormat.G12X4B12X4R12X42Plane444Unorm3Pack16:
				switch (plane)
				{
					case 0: return 1;
					case 1: return 1;
					default: return 1;
				}
			case VkFormat.G16B16R162Plane444Unorm:
				switch (plane)
				{
					case 0: return 1;
					case 1: return 1;
					default: return 1;
				}

			default: return 1;
		}
	}
}
