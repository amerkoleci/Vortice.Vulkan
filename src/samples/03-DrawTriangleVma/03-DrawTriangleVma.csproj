<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFrameworks>net7.0;net8.0</TargetFrameworks>
    <IsPackable>false</IsPackable>
    <AssemblyName>03-DrawTriangleVma</AssemblyName>
  </PropertyGroup>

  <PropertyGroup>
    <PublishAot>true</PublishAot>
    <UseSystemResourceKeys>true</UseSystemResourceKeys>
    <InvariantGlobalization>true</InvariantGlobalization>
    <OptimizationPreference>Speed</OptimizationPreference>
    <IlcFoldIdenticalMethodBodies>true</IlcFoldIdenticalMethodBodies>
    <IlcDisableReflection>false</IlcDisableReflection>
  </PropertyGroup>

  <ItemGroup>
    <Content Include="Assets\*.spv" CopyToOutputDirectory="Always" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\..\Vortice.VulkanMemoryAllocator\Vortice.VulkanMemoryAllocator.csproj" />
    <ProjectReference Include="..\Vortice.Vulkan.SampleFramework\Vortice.Vulkan.SampleFramework.csproj" />
  </ItemGroup>

  <Choose>
    <When Condition="$([MSBuild]::IsOSPlatform('Windows')) AND '$([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture)' == 'X64'">
      <ItemGroup>
        <None Include="$(RepoRootPath)src\Vortice.VulkanMemoryAllocator\runtimes\win-x64\native\vma.dll" Link="vma.dll" Visible="False" CopyToOutputDirectory="PreserveNewest" />
      </ItemGroup>
    </When>
    <When Condition="$([MSBuild]::IsOSPlatform('Windows')) AND '$([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture)' == 'Arm64'">
      <ItemGroup>
        <None Include="$(RepoRootPath)src\Vortice.VulkanMemoryAllocator\runtimes\win-arm64\native\vma.dll" Link="vma.dll" Visible="False" CopyToOutputDirectory="PreserveNewest" />
      </ItemGroup>
    </When>
    <When Condition="$([MSBuild]::IsOSPlatform('Linux')) AND '$([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture)' == 'X64'">
      <ItemGroup>
        <None Include="$(RepoRootPath)src\Vortice.VulkanMemoryAllocator\runtimes\linux-x64\native\libvma.so" Link="libvma.so" Visible="False" CopyToOutputDirectory="PreserveNewest" />
      </ItemGroup>
    </When>
    <When Condition="$([MSBuild]::IsOSPlatform('OSX'))">
      <ItemGroup>
        <None Include="$(RepoRootPath)src\Vortice.VulkanMemoryAllocator\runtimes\osx\native\libvma.dylib" Link="libvma.dylib" Visible="False" CopyToOutputDirectory="PreserveNewest" />
      </ItemGroup>
    </When>
  </Choose>

</Project>
