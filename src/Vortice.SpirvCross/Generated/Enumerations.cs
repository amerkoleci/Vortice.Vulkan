// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;

namespace Vortice.SpirvCross;

public enum Result
{
	/// <unmanaged>SPVC_SUCCESS</unmanaged>
	Success = 0,
	/// <unmanaged>SPVC_ERROR_INVALID_SPIRV</unmanaged>
	InvalidSPIRV = -1,
	/// <unmanaged>SPVC_ERROR_UNSUPPORTED_SPIRV</unmanaged>
	UnsupportedSPIRV = -2,
	/// <unmanaged>SPVC_ERROR_OUT_OF_MEMORY</unmanaged>
	OutOfMemory = -3,
	/// <unmanaged>SPVC_ERROR_INVALID_ARGUMENT</unmanaged>
	InvalidArgument = -4,
}

public enum CaptureMode
{
	/// <unmanaged>SPVC_CAPTURE_MODE_COPY</unmanaged>
	Copy = 0,
	/// <unmanaged>SPVC_CAPTURE_MODE_TAKE_OWNERSHIP</unmanaged>
	TakeOwnership = 1,
}

public enum Backend
{
	/// <unmanaged>SPVC_BACKEND_NONE</unmanaged>
	None = 0,
	/// <unmanaged>SPVC_BACKEND_GLSL</unmanaged>
	GLSL = 1,
	/// <unmanaged>SPVC_BACKEND_HLSL</unmanaged>
	HLSL = 2,
	/// <unmanaged>SPVC_BACKEND_MSL</unmanaged>
	MSL = 3,
	/// <unmanaged>SPVC_BACKEND_CPP</unmanaged>
	Cpp = 4,
	/// <unmanaged>SPVC_BACKEND_JSON</unmanaged>
	JSON = 5,
}

public enum ResourceType
{
	/// <unmanaged>SPVC_RESOURCE_TYPE_UNKNOWN</unmanaged>
	Unknown = 0,
	/// <unmanaged>SPVC_RESOURCE_TYPE_UNIFORM_BUFFER</unmanaged>
	UniformBuffer = 1,
	/// <unmanaged>SPVC_RESOURCE_TYPE_STORAGE_BUFFER</unmanaged>
	StorageBuffer = 2,
	/// <unmanaged>SPVC_RESOURCE_TYPE_STAGE_INPUT</unmanaged>
	StageInput = 3,
	/// <unmanaged>SPVC_RESOURCE_TYPE_STAGE_OUTPUT</unmanaged>
	StageOutput = 4,
	/// <unmanaged>SPVC_RESOURCE_TYPE_SUBPASS_INPUT</unmanaged>
	SubpassInput = 5,
	/// <unmanaged>SPVC_RESOURCE_TYPE_STORAGE_IMAGE</unmanaged>
	StorageImage = 6,
	/// <unmanaged>SPVC_RESOURCE_TYPE_SAMPLED_IMAGE</unmanaged>
	SampledImage = 7,
	/// <unmanaged>SPVC_RESOURCE_TYPE_ATOMIC_COUNTER</unmanaged>
	AtomicCounter = 8,
	/// <unmanaged>SPVC_RESOURCE_TYPE_PUSH_CONSTANT</unmanaged>
	PushConstant = 9,
	/// <unmanaged>SPVC_RESOURCE_TYPE_SEPARATE_IMAGE</unmanaged>
	SeparateImage = 10,
	/// <unmanaged>SPVC_RESOURCE_TYPE_SEPARATE_SAMPLERS</unmanaged>
	SeparateSamplers = 11,
	/// <unmanaged>SPVC_RESOURCE_TYPE_ACCELERATION_STRUCTURE</unmanaged>
	AccelerationStructure = 12,
	/// <unmanaged>SPVC_RESOURCE_TYPE_RAY_QUERY</unmanaged>
	RayQuery = 13,
	/// <unmanaged>SPVC_RESOURCE_TYPE_SHADER_RECORD_BUFFER</unmanaged>
	ShaderRecordBuffer = 14,
	/// <unmanaged>SPVC_RESOURCE_TYPE_GL_PLAIN_UNIFORM</unmanaged>
	GlPlainUniform = 15,
}

public enum BuiltinResourceType
{
	/// <unmanaged>SPVC_BUILTIN_RESOURCE_TYPE_UNKNOWN</unmanaged>
	Unknown = 0,
	/// <unmanaged>SPVC_BUILTIN_RESOURCE_TYPE_STAGE_INPUT</unmanaged>
	StageInput = 1,
	/// <unmanaged>SPVC_BUILTIN_RESOURCE_TYPE_STAGE_OUTPUT</unmanaged>
	StageOutput = 2,
}

public enum Basetype
{
	/// <unmanaged>SPVC_BASETYPE_UNKNOWN</unmanaged>
	Unknown = 0,
	/// <unmanaged>SPVC_BASETYPE_VOID</unmanaged>
	Void = 1,
	/// <unmanaged>SPVC_BASETYPE_BOOLEAN</unmanaged>
	Boolean = 2,
	/// <unmanaged>SPVC_BASETYPE_INT8</unmanaged>
	Int8 = 3,
	/// <unmanaged>SPVC_BASETYPE_UINT8</unmanaged>
	Uint8 = 4,
	/// <unmanaged>SPVC_BASETYPE_INT16</unmanaged>
	Int16 = 5,
	/// <unmanaged>SPVC_BASETYPE_UINT16</unmanaged>
	Uint16 = 6,
	/// <unmanaged>SPVC_BASETYPE_INT32</unmanaged>
	Int32 = 7,
	/// <unmanaged>SPVC_BASETYPE_UINT32</unmanaged>
	Uint32 = 8,
	/// <unmanaged>SPVC_BASETYPE_INT64</unmanaged>
	Int64 = 9,
	/// <unmanaged>SPVC_BASETYPE_UINT64</unmanaged>
	Uint64 = 10,
	/// <unmanaged>SPVC_BASETYPE_ATOMIC_COUNTER</unmanaged>
	AtomicCounter = 11,
	/// <unmanaged>SPVC_BASETYPE_FP16</unmanaged>
	Fp16 = 12,
	/// <unmanaged>SPVC_BASETYPE_FP32</unmanaged>
	Fp32 = 13,
	/// <unmanaged>SPVC_BASETYPE_FP64</unmanaged>
	Fp64 = 14,
	/// <unmanaged>SPVC_BASETYPE_STRUCT</unmanaged>
	Struct = 15,
	/// <unmanaged>SPVC_BASETYPE_IMAGE</unmanaged>
	Image = 16,
	/// <unmanaged>SPVC_BASETYPE_SAMPLED_IMAGE</unmanaged>
	SampledImage = 17,
	/// <unmanaged>SPVC_BASETYPE_SAMPLER</unmanaged>
	Sampler = 18,
	/// <unmanaged>SPVC_BASETYPE_ACCELERATION_STRUCTURE</unmanaged>
	AccelerationStructure = 19,
}

public enum MSLPlatform
{
	/// <unmanaged>SPVC_MSL_PLATFORM_IOS</unmanaged>
	IOS = 0,
	/// <unmanaged>SPVC_MSL_PLATFORM_MACOS</unmanaged>
	MACOS = 1,
}

public enum MSLIndexType
{
	/// <unmanaged>SPVC_MSL_INDEX_TYPE_NONE</unmanaged>
	None = 0,
	/// <unmanaged>SPVC_MSL_INDEX_TYPE_UINT16</unmanaged>
	Uint16 = 1,
	/// <unmanaged>SPVC_MSL_INDEX_TYPE_UINT32</unmanaged>
	Uint32 = 2,
}

public enum MSLShaderVariableFormat
{
	/// <unmanaged>SPVC_MSL_SHADER_VARIABLE_FORMAT_OTHER</unmanaged>
	Other = 0,
	/// <unmanaged>SPVC_MSL_SHADER_VARIABLE_FORMAT_UINT8</unmanaged>
	Uint8 = 1,
	/// <unmanaged>SPVC_MSL_SHADER_VARIABLE_FORMAT_UINT16</unmanaged>
	Uint16 = 2,
	/// <unmanaged>SPVC_MSL_SHADER_VARIABLE_FORMAT_ANY16</unmanaged>
	Any16 = 3,
	/// <unmanaged>SPVC_MSL_SHADER_VARIABLE_FORMAT_ANY32</unmanaged>
	Any32 = 4,
}

public enum MSLShaderVariableRate
{
	/// <unmanaged>SPVC_MSL_SHADER_VARIABLE_RATE_PER_VERTEX</unmanaged>
	PerVertex = 0,
	/// <unmanaged>SPVC_MSL_SHADER_VARIABLE_RATE_PER_PRIMITIVE</unmanaged>
	PerPrimitive = 1,
	/// <unmanaged>SPVC_MSL_SHADER_VARIABLE_RATE_PER_PATCH</unmanaged>
	PerPatch = 2,
}

public enum MSLSamplerCoord
{
	/// <unmanaged>SPVC_MSL_SAMPLER_COORD_NORMALIZED</unmanaged>
	Normalized = 0,
	/// <unmanaged>SPVC_MSL_SAMPLER_COORD_PIXEL</unmanaged>
	Pixel = 1,
}

public enum MSLSamplerFilter
{
	/// <unmanaged>SPVC_MSL_SAMPLER_FILTER_NEAREST</unmanaged>
	Nearest = 0,
	/// <unmanaged>SPVC_MSL_SAMPLER_FILTER_LINEAR</unmanaged>
	Linear = 1,
}

public enum MSLSamplerMipFilter
{
	/// <unmanaged>SPVC_MSL_SAMPLER_MIP_FILTER_NONE</unmanaged>
	None = 0,
	/// <unmanaged>SPVC_MSL_SAMPLER_MIP_FILTER_NEAREST</unmanaged>
	Nearest = 1,
	/// <unmanaged>SPVC_MSL_SAMPLER_MIP_FILTER_LINEAR</unmanaged>
	Linear = 2,
}

public enum MSLSamplerAddress
{
	/// <unmanaged>SPVC_MSL_SAMPLER_ADDRESS_CLAMP_TO_ZERO</unmanaged>
	ClampToZero = 0,
	/// <unmanaged>SPVC_MSL_SAMPLER_ADDRESS_CLAMP_TO_EDGE</unmanaged>
	ClampToEdge = 1,
	/// <unmanaged>SPVC_MSL_SAMPLER_ADDRESS_CLAMP_TO_BORDER</unmanaged>
	ClampToBorder = 2,
	/// <unmanaged>SPVC_MSL_SAMPLER_ADDRESS_REPEAT</unmanaged>
	Repeat = 3,
	/// <unmanaged>SPVC_MSL_SAMPLER_ADDRESS_MIRRORED_REPEAT</unmanaged>
	MirroredRepeat = 4,
}

public enum MSLSamplerCompareFunc
{
	/// <unmanaged>SPVC_MSL_SAMPLER_COMPARE_FUNC_NEVER</unmanaged>
	Never = 0,
	/// <unmanaged>SPVC_MSL_SAMPLER_COMPARE_FUNC_LESS</unmanaged>
	Less = 1,
	/// <unmanaged>SPVC_MSL_SAMPLER_COMPARE_FUNC_LESS_EQUAL</unmanaged>
	LessEqual = 2,
	/// <unmanaged>SPVC_MSL_SAMPLER_COMPARE_FUNC_GREATER</unmanaged>
	Greater = 3,
	/// <unmanaged>SPVC_MSL_SAMPLER_COMPARE_FUNC_GREATER_EQUAL</unmanaged>
	GreaterEqual = 4,
	/// <unmanaged>SPVC_MSL_SAMPLER_COMPARE_FUNC_EQUAL</unmanaged>
	Equal = 5,
	/// <unmanaged>SPVC_MSL_SAMPLER_COMPARE_FUNC_NOT_EQUAL</unmanaged>
	NotEqual = 6,
	/// <unmanaged>SPVC_MSL_SAMPLER_COMPARE_FUNC_ALWAYS</unmanaged>
	Always = 7,
}

public enum MSLSamplerBorderColor
{
	/// <unmanaged>SPVC_MSL_SAMPLER_BORDER_COLOR_TRANSPARENT_BLACK</unmanaged>
	TransparentBlack = 0,
	/// <unmanaged>SPVC_MSL_SAMPLER_BORDER_COLOR_OPAQUE_BLACK</unmanaged>
	OpaqueBlack = 1,
	/// <unmanaged>SPVC_MSL_SAMPLER_BORDER_COLOR_OPAQUE_WHITE</unmanaged>
	OpaqueWhite = 2,
}

public enum MSLFormatResolution
{
	/// <unmanaged>SPVC_MSL_FORMAT_RESOLUTION_444</unmanaged>
	_444 = 0,
	/// <unmanaged>SPVC_MSL_FORMAT_RESOLUTION_422</unmanaged>
	_422 = 1,
	/// <unmanaged>SPVC_MSL_FORMAT_RESOLUTION_420</unmanaged>
	_420 = 2,
}

public enum MSLChromaLocation
{
	/// <unmanaged>SPVC_MSL_CHROMA_LOCATION_COSITED_EVEN</unmanaged>
	CositedEven = 0,
	/// <unmanaged>SPVC_MSL_CHROMA_LOCATION_MIDPOINT</unmanaged>
	Midpoint = 1,
}

public enum MSLComponentSwizzle
{
	/// <unmanaged>SPVC_MSL_COMPONENT_SWIZZLE_IDENTITY</unmanaged>
	Identity = 0,
	/// <unmanaged>SPVC_MSL_COMPONENT_SWIZZLE_ZERO</unmanaged>
	Zero = 1,
	/// <unmanaged>SPVC_MSL_COMPONENT_SWIZZLE_ONE</unmanaged>
	One = 2,
	/// <unmanaged>SPVC_MSL_COMPONENT_SWIZZLE_R</unmanaged>
	R = 3,
	/// <unmanaged>SPVC_MSL_COMPONENT_SWIZZLE_G</unmanaged>
	G = 4,
	/// <unmanaged>SPVC_MSL_COMPONENT_SWIZZLE_B</unmanaged>
	B = 5,
	/// <unmanaged>SPVC_MSL_COMPONENT_SWIZZLE_A</unmanaged>
	A = 6,
}

public enum MSLSamplerYcbcrModelConversion
{
	/// <unmanaged>SPVC_MSL_SAMPLER_YCBCR_MODEL_CONVERSION_RGB_IDENTITY</unmanaged>
	RgbIdentity = 0,
	/// <unmanaged>SPVC_MSL_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_IDENTITY</unmanaged>
	YcbcrIdentity = 1,
	/// <unmanaged>SPVC_MSL_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_BT_709</unmanaged>
	YcbcrBt709 = 2,
	/// <unmanaged>SPVC_MSL_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_BT_601</unmanaged>
	YcbcrBt601 = 3,
	/// <unmanaged>SPVC_MSL_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_BT_2020</unmanaged>
	YcbcrBt2020 = 4,
}

public enum MSLSamplerYcbcrRange
{
	/// <unmanaged>SPVC_MSL_SAMPLER_YCBCR_RANGE_ITU_FULL</unmanaged>
	ItuFull = 0,
	/// <unmanaged>SPVC_MSL_SAMPLER_YCBCR_RANGE_ITU_NARROW</unmanaged>
	ItuNarrow = 1,
}

[Flags]
public enum HLSLBindingFlags
{
	/// <unmanaged>SPVC_HLSL_BINDING_AUTO_NONE_BIT</unmanaged>
	None = 0,
	/// <unmanaged>SPVC_HLSL_BINDING_AUTO_PUSH_CONSTANT_BIT</unmanaged>
	PushConstant = 1 << 0,
	/// <unmanaged>SPVC_HLSL_BINDING_AUTO_CBV_BIT</unmanaged>
	Cbv = 1 << 1,
	/// <unmanaged>SPVC_HLSL_BINDING_AUTO_SRV_BIT</unmanaged>
	Srv = 1 << 2,
	/// <unmanaged>SPVC_HLSL_BINDING_AUTO_UAV_BIT</unmanaged>
	Uav = 1 << 3,
	/// <unmanaged>SPVC_HLSL_BINDING_AUTO_SAMPLER_BIT</unmanaged>
	Sampler = 1 << 4,
	/// <unmanaged>SPVC_HLSL_BINDING_AUTO_ALL</unmanaged>
	All = 0x7fffffff,
}

public enum CompilerOption
{
	/// <unmanaged>SPVC_COMPILER_OPTION_UNKNOWN</unmanaged>
	Unknown = 0,
	/// <unmanaged>SPVC_COMPILER_OPTION_FORCE_TEMPORARY</unmanaged>
	ForceTemporary = 16777217,
	/// <unmanaged>SPVC_COMPILER_OPTION_FLATTEN_MULTIDIMENSIONAL_ARRAYS</unmanaged>
	FlattenMultidimensionalArrays = 16777218,
	/// <unmanaged>SPVC_COMPILER_OPTION_FIXUP_DEPTH_CONVENTION</unmanaged>
	FixupDepthConvention = 16777219,
	/// <unmanaged>SPVC_COMPILER_OPTION_FLIP_VERTEX_Y</unmanaged>
	FlipVertexY = 16777220,
	/// <unmanaged>SPVC_COMPILER_OPTION_GLSL_SUPPORT_NONZERO_BASE_INSTANCE</unmanaged>
	GLSLSupportNonzeroBaseInstance = 33554437,
	/// <unmanaged>SPVC_COMPILER_OPTION_GLSL_SEPARATE_SHADER_OBJECTS</unmanaged>
	GLSLSeparateShaderObjects = 33554438,
	/// <unmanaged>SPVC_COMPILER_OPTION_GLSL_ENABLE_420PACK_EXTENSION</unmanaged>
	GLSLEnable420packExtension = 33554439,
	/// <unmanaged>SPVC_COMPILER_OPTION_GLSL_VERSION</unmanaged>
	GLSLVersion = 33554440,
	/// <unmanaged>SPVC_COMPILER_OPTION_GLSL_ES</unmanaged>
	GLSLES = 33554441,
	/// <unmanaged>SPVC_COMPILER_OPTION_GLSL_VULKAN_SEMANTICS</unmanaged>
	GLSLVulkanSemantics = 33554442,
	/// <unmanaged>SPVC_COMPILER_OPTION_GLSL_ES_DEFAULT_FLOAT_PRECISION_HIGHP</unmanaged>
	GLSLESDefaultFloatPrecisionHighp = 33554443,
	/// <unmanaged>SPVC_COMPILER_OPTION_GLSL_ES_DEFAULT_INT_PRECISION_HIGHP</unmanaged>
	GLSLESDefaultIntPrecisionHighp = 33554444,
	/// <unmanaged>SPVC_COMPILER_OPTION_HLSL_SHADER_MODEL</unmanaged>
	HLSLShaderModel = 67108877,
	/// <unmanaged>SPVC_COMPILER_OPTION_HLSL_POINT_SIZE_COMPAT</unmanaged>
	HLSLPointSizeCompat = 67108878,
	/// <unmanaged>SPVC_COMPILER_OPTION_HLSL_POINT_COORD_COMPAT</unmanaged>
	HLSLPointCoordCompat = 67108879,
	/// <unmanaged>SPVC_COMPILER_OPTION_HLSL_SUPPORT_NONZERO_BASE_VERTEX_BASE_INSTANCE</unmanaged>
	HLSLSupportNonzeroBaseVertexBaseInstance = 67108880,
	/// <unmanaged>SPVC_COMPILER_OPTION_MSL_VERSION</unmanaged>
	MSLVersion = 134217745,
	/// <unmanaged>SPVC_COMPILER_OPTION_MSL_TEXEL_BUFFER_TEXTURE_WIDTH</unmanaged>
	MSLTexelBufferTextureWidth = 134217746,
	/// <unmanaged>SPVC_COMPILER_OPTION_MSL_AUX_BUFFER_INDEX</unmanaged>
	MSLAuxBufferIndex = 134217747,
	/// <unmanaged>SPVC_COMPILER_OPTION_MSL_SWIZZLE_BUFFER_INDEX</unmanaged>
	MSLSwizzleBufferIndex = 134217747,
	/// <unmanaged>SPVC_COMPILER_OPTION_MSL_INDIRECT_PARAMS_BUFFER_INDEX</unmanaged>
	MSLIndirectParamsBufferIndex = 134217748,
	/// <unmanaged>SPVC_COMPILER_OPTION_MSL_SHADER_OUTPUT_BUFFER_INDEX</unmanaged>
	MSLShaderOutputBufferIndex = 134217749,
	/// <unmanaged>SPVC_COMPILER_OPTION_MSL_SHADER_PATCH_OUTPUT_BUFFER_INDEX</unmanaged>
	MSLShaderPatchOutputBufferIndex = 134217750,
	/// <unmanaged>SPVC_COMPILER_OPTION_MSL_SHADER_TESS_FACTOR_OUTPUT_BUFFER_INDEX</unmanaged>
	MSLShaderTessFactorOutputBufferIndex = 134217751,
	/// <unmanaged>SPVC_COMPILER_OPTION_MSL_SHADER_INPUT_WORKGROUP_INDEX</unmanaged>
	MSLShaderInputWorkgroupIndex = 134217752,
	/// <unmanaged>SPVC_COMPILER_OPTION_MSL_ENABLE_POINT_SIZE_BUILTIN</unmanaged>
	MSLEnablePointSizeBuiltin = 134217753,
	/// <unmanaged>SPVC_COMPILER_OPTION_MSL_DISABLE_RASTERIZATION</unmanaged>
	MSLDisableRasterization = 134217754,
	/// <unmanaged>SPVC_COMPILER_OPTION_MSL_CAPTURE_OUTPUT_TO_BUFFER</unmanaged>
	MSLCaptureOutputToBuffer = 134217755,
	/// <unmanaged>SPVC_COMPILER_OPTION_MSL_SWIZZLE_TEXTURE_SAMPLES</unmanaged>
	MSLSwizzleTextureSamples = 134217756,
	/// <unmanaged>SPVC_COMPILER_OPTION_MSL_PAD_FRAGMENT_OUTPUT_COMPONENTS</unmanaged>
	MSLPadFragmentOutputComponents = 134217757,
	/// <unmanaged>SPVC_COMPILER_OPTION_MSL_TESS_DOMAIN_ORIGIN_LOWER_LEFT</unmanaged>
	MSLTessDomainOriginLowerLeft = 134217758,
	/// <unmanaged>SPVC_COMPILER_OPTION_MSL_PLATFORM</unmanaged>
	MSLPlatform = 134217759,
	/// <unmanaged>SPVC_COMPILER_OPTION_MSL_ARGUMENT_BUFFERS</unmanaged>
	MSLArgumentBuffers = 134217760,
	/// <unmanaged>SPVC_COMPILER_OPTION_GLSL_EMIT_PUSH_CONSTANT_AS_UNIFORM_BUFFER</unmanaged>
	GLSLEmitPushConstantAsUniformBuffer = 33554465,
	/// <unmanaged>SPVC_COMPILER_OPTION_MSL_TEXTURE_BUFFER_NATIVE</unmanaged>
	MSLTextureBufferNative = 134217762,
	/// <unmanaged>SPVC_COMPILER_OPTION_GLSL_EMIT_UNIFORM_BUFFER_AS_PLAIN_UNIFORMS</unmanaged>
	GLSLEmitUniformBufferAsPlainUniforms = 33554467,
	/// <unmanaged>SPVC_COMPILER_OPTION_MSL_BUFFER_SIZE_BUFFER_INDEX</unmanaged>
	MSLBufferSizeBufferIndex = 134217764,
	/// <unmanaged>SPVC_COMPILER_OPTION_EMIT_LINE_DIRECTIVES</unmanaged>
	EmitLineDirectives = 16777253,
	/// <unmanaged>SPVC_COMPILER_OPTION_MSL_MULTIVIEW</unmanaged>
	MSLMultiview = 134217766,
	/// <unmanaged>SPVC_COMPILER_OPTION_MSL_VIEW_MASK_BUFFER_INDEX</unmanaged>
	MSLViewMaskBufferIndex = 134217767,
	/// <unmanaged>SPVC_COMPILER_OPTION_MSL_DEVICE_INDEX</unmanaged>
	MSLDeviceIndex = 134217768,
	/// <unmanaged>SPVC_COMPILER_OPTION_MSL_VIEW_INDEX_FROM_DEVICE_INDEX</unmanaged>
	MSLViewIndexFromDeviceIndex = 134217769,
	/// <unmanaged>SPVC_COMPILER_OPTION_MSL_DISPATCH_BASE</unmanaged>
	MSLDispatchBase = 134217770,
	/// <unmanaged>SPVC_COMPILER_OPTION_MSL_DYNAMIC_OFFSETS_BUFFER_INDEX</unmanaged>
	MSLDynamicOffsetsBufferIndex = 134217771,
	/// <unmanaged>SPVC_COMPILER_OPTION_MSL_TEXTURE_1D_AS_2D</unmanaged>
	MSLTexture1dAs2D = 134217772,
	/// <unmanaged>SPVC_COMPILER_OPTION_MSL_ENABLE_BASE_INDEX_ZERO</unmanaged>
	MSLEnableBaseIndexZero = 134217773,
	/// <unmanaged>SPVC_COMPILER_OPTION_MSL_IOS_FRAMEBUFFER_FETCH_SUBPASS</unmanaged>
	MSLIOSFramebufferFetchSubpass = 134217774,
	/// <unmanaged>SPVC_COMPILER_OPTION_MSL_FRAMEBUFFER_FETCH_SUBPASS</unmanaged>
	MSLFramebufferFetchSubpass = 134217774,
	/// <unmanaged>SPVC_COMPILER_OPTION_MSL_INVARIANT_FP_MATH</unmanaged>
	MSLInvariantFpMath = 134217775,
	/// <unmanaged>SPVC_COMPILER_OPTION_MSL_EMULATE_CUBEMAP_ARRAY</unmanaged>
	MSLEmulateCubemapArray = 134217776,
	/// <unmanaged>SPVC_COMPILER_OPTION_MSL_ENABLE_DECORATION_BINDING</unmanaged>
	MSLEnableDecorationBinding = 134217777,
	/// <unmanaged>SPVC_COMPILER_OPTION_MSL_FORCE_ACTIVE_ARGUMENT_BUFFER_RESOURCES</unmanaged>
	MSLForceActiveArgumentBufferResources = 134217778,
	/// <unmanaged>SPVC_COMPILER_OPTION_MSL_FORCE_NATIVE_ARRAYS</unmanaged>
	MSLForceNativeArrays = 134217779,
	/// <unmanaged>SPVC_COMPILER_OPTION_ENABLE_STORAGE_IMAGE_QUALIFIER_DEDUCTION</unmanaged>
	EnableStorageImageQualifierDeduction = 16777268,
	/// <unmanaged>SPVC_COMPILER_OPTION_HLSL_FORCE_STORAGE_BUFFER_AS_UAV</unmanaged>
	HLSLForceStorageBufferAsUav = 67108917,
	/// <unmanaged>SPVC_COMPILER_OPTION_FORCE_ZERO_INITIALIZED_VARIABLES</unmanaged>
	ForceZeroInitializedVariables = 16777270,
	/// <unmanaged>SPVC_COMPILER_OPTION_HLSL_NONWRITABLE_UAV_TEXTURE_AS_SRV</unmanaged>
	HLSLNonwritableUavTextureAsSrv = 67108919,
	/// <unmanaged>SPVC_COMPILER_OPTION_MSL_ENABLE_FRAG_OUTPUT_MASK</unmanaged>
	MSLEnableFragOutputMask = 134217784,
	/// <unmanaged>SPVC_COMPILER_OPTION_MSL_ENABLE_FRAG_DEPTH_BUILTIN</unmanaged>
	MSLEnableFragDepthBuiltin = 134217785,
	/// <unmanaged>SPVC_COMPILER_OPTION_MSL_ENABLE_FRAG_STENCIL_REF_BUILTIN</unmanaged>
	MSLEnableFragStencilRefBuiltin = 134217786,
	/// <unmanaged>SPVC_COMPILER_OPTION_MSL_ENABLE_CLIP_DISTANCE_USER_VARYING</unmanaged>
	MSLEnableClipDistanceUserVarying = 134217787,
	/// <unmanaged>SPVC_COMPILER_OPTION_HLSL_ENABLE_16BIT_TYPES</unmanaged>
	HLSLEnable16bitTypes = 67108924,
	/// <unmanaged>SPVC_COMPILER_OPTION_MSL_MULTI_PATCH_WORKGROUP</unmanaged>
	MSLMultiPatchWorkgroup = 134217789,
	/// <unmanaged>SPVC_COMPILER_OPTION_MSL_SHADER_INPUT_BUFFER_INDEX</unmanaged>
	MSLShaderInputBufferIndex = 134217790,
	/// <unmanaged>SPVC_COMPILER_OPTION_MSL_SHADER_INDEX_BUFFER_INDEX</unmanaged>
	MSLShaderIndexBufferIndex = 134217791,
	/// <unmanaged>SPVC_COMPILER_OPTION_MSL_VERTEX_FOR_TESSELLATION</unmanaged>
	MSLVertexForTessellation = 134217792,
	/// <unmanaged>SPVC_COMPILER_OPTION_MSL_VERTEX_INDEX_TYPE</unmanaged>
	MSLVertexIndexType = 134217793,
	/// <unmanaged>SPVC_COMPILER_OPTION_GLSL_FORCE_FLATTENED_IO_BLOCKS</unmanaged>
	GLSLForceFlattenedIOBlocks = 33554498,
	/// <unmanaged>SPVC_COMPILER_OPTION_MSL_MULTIVIEW_LAYERED_RENDERING</unmanaged>
	MSLMultiviewLayeredRendering = 134217795,
	/// <unmanaged>SPVC_COMPILER_OPTION_MSL_ARRAYED_SUBPASS_INPUT</unmanaged>
	MSLArrayedSubpassInput = 134217796,
	/// <unmanaged>SPVC_COMPILER_OPTION_MSL_R32UI_LINEAR_TEXTURE_ALIGNMENT</unmanaged>
	MSLR32uiLinearTextureAlignment = 134217797,
	/// <unmanaged>SPVC_COMPILER_OPTION_MSL_R32UI_ALIGNMENT_CONSTANT_ID</unmanaged>
	MSLR32uiAlignmentConstantID = 134217798,
	/// <unmanaged>SPVC_COMPILER_OPTION_HLSL_FLATTEN_MATRIX_VERTEX_INPUT_SEMANTICS</unmanaged>
	HLSLFlattenMatrixVertexInputSemantics = 67108935,
	/// <unmanaged>SPVC_COMPILER_OPTION_MSL_IOS_USE_SIMDGROUP_FUNCTIONS</unmanaged>
	MSLIOSUseSimdgroupFunctions = 134217800,
	/// <unmanaged>SPVC_COMPILER_OPTION_MSL_EMULATE_SUBGROUPS</unmanaged>
	MSLEmulateSubgroups = 134217801,
	/// <unmanaged>SPVC_COMPILER_OPTION_MSL_FIXED_SUBGROUP_SIZE</unmanaged>
	MSLFixedSubgroupSize = 134217802,
	/// <unmanaged>SPVC_COMPILER_OPTION_MSL_FORCE_SAMPLE_RATE_SHADING</unmanaged>
	MSLForceSampleRateShading = 134217803,
	/// <unmanaged>SPVC_COMPILER_OPTION_MSL_IOS_SUPPORT_BASE_VERTEX_INSTANCE</unmanaged>
	MSLIOSSupportBaseVertexInstance = 134217804,
	/// <unmanaged>SPVC_COMPILER_OPTION_GLSL_OVR_MULTIVIEW_VIEW_COUNT</unmanaged>
	GLSLOvrMultiviewViewCount = 33554509,
	/// <unmanaged>SPVC_COMPILER_OPTION_RELAX_NAN_CHECKS</unmanaged>
	RelaxNanChecks = 16777294,
	/// <unmanaged>SPVC_COMPILER_OPTION_MSL_RAW_BUFFER_TESE_INPUT</unmanaged>
	MSLRawBufferTeseInput = 134217807,
	/// <unmanaged>SPVC_COMPILER_OPTION_MSL_SHADER_PATCH_INPUT_BUFFER_INDEX</unmanaged>
	MSLShaderPatchInputBufferIndex = 134217808,
	/// <unmanaged>SPVC_COMPILER_OPTION_MSL_MANUAL_HELPER_INVOCATION_UPDATES</unmanaged>
	MSLManualHelperInvocationUpdates = 134217809,
	/// <unmanaged>SPVC_COMPILER_OPTION_MSL_CHECK_DISCARDED_FRAG_STORES</unmanaged>
	MSLCheckDiscardedFragStores = 134217810,
	/// <unmanaged>SPVC_COMPILER_OPTION_GLSL_ENABLE_ROW_MAJOR_LOAD_WORKAROUND</unmanaged>
	GLSLEnableRowMajorLoadWorkaround = 33554515,
	/// <unmanaged>SPVC_COMPILER_OPTION_MSL_ARGUMENT_BUFFERS_TIER</unmanaged>
	MSLArgumentBuffersTier = 134217812,
	/// <unmanaged>SPVC_COMPILER_OPTION_MSL_SAMPLE_DREF_LOD_ARRAY_AS_GRAD</unmanaged>
	MSLSampleDrefLodArrayAsGrad = 134217813,
	/// <unmanaged>SPVC_COMPILER_OPTION_MSL_READWRITE_TEXTURE_FENCES</unmanaged>
	MSLReadwriteTextureFences = 134217814,
	/// <unmanaged>SPVC_COMPILER_OPTION_MSL_REPLACE_RECURSIVE_INPUTS</unmanaged>
	MSLReplaceRecursiveInputs = 134217815,
	/// <unmanaged>SPVC_COMPILER_OPTION_MSL_AGX_MANUAL_CUBE_GRAD_FIXUP</unmanaged>
	MSLAgxManualCubeGradFixup = 134217816,
	/// <unmanaged>SPVC_COMPILER_OPTION_MSL_FORCE_FRAGMENT_WITH_SIDE_EFFECTS_EXECUTION</unmanaged>
	MSLForceFragmentWithSideEffectsExecution = 134217817,
	/// <unmanaged>SPVC_COMPILER_OPTION_HLSL_USE_ENTRY_POINT_NAME</unmanaged>
	HLSLUseEntryPointName = 67108954,
	/// <unmanaged>SPVC_COMPILER_OPTION_HLSL_PRESERVE_STRUCTURED_BUFFERS</unmanaged>
	HLSLPreserveStructuredBuffers = 67108955,
}

